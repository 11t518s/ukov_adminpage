{"version":3,"sources":["fbase.js","components/FAQ.js","components/info.js","components/internship.js","components/networking.js","components/partner.js","components/project.js","components/recruit.js","admin.js","login.js","App.js","index.js"],"names":["dbService","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","auth","firebaseInstance","storageService","storage","FAQ","userObj","useState","setFAQ","getFAQ","a","collection","get","forEach","document","newFAQ","data","id","prev","useEffect","newQ","setNewQ","newA","setNewA","newA2","setNewA2","newA3","setNewA3","newA4","setNewA4","newA5","setNewA5","newA6","setNewA6","newA7","setNewA7","newA8","setNewA8","ACount","setACount","newSubmit","event","preventDefault","add","A","A2","A3","A4","A5","A6","A7","A8","createdAt","Date","now","alert","className","onSubmit","type","value","onChange","target","placeholder","onClick","map","Q","window","confirm","doc","delete","refFromURL","FAQURL","Info","info","setInfo","getInfo","newInfo","Link","setNewLink","Finish","setNewFinish","Alumni","setNewAlumni","resumePass","setNewresumePass","start_date","setNewstart_date","project","setNewproject","end_date","setNewend_date","meeting1","setNewmeeting1","meeting2","setNewmeeting2","th","setNewth","year","setNewyear","newFile","setNewFile","fireRef","ref","child","putString","response","getDownloadURL","file","alumni","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","Internship","internship","setInternship","getInternship","newinternship","newInternshipLink","setNewInternshipLink","newTitle","setNewTitle","newSubtitle","setNewSubtitle","uuidv4","internshipURL","title","subtitle","internshipLink","src","alt","width","height","href","Networking","networking","setnetworking","getnetworking","newnetworking","newnetworkingLink","setNewnetworkingLink","networkingURL","networkingLink","Partner","partner","setpartner","getpartner","orderBy","newpartner","partnerURL","partnerLink","Project","setproject","getproject","newproject","newprojectLink","setNewprojectLink","projectURL","projectLink","Recruit","Admin","exact","to","path","Login","provider","GoogleAuthProvider","signInWithPopup","name","App","isLoggedIn","setIsLoggedIn","setUserObj","onAuthStateChanged","user","providerData","email","slice","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03bc8d78.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD8vqF42c93GBQTddLW2ogqMBrTsd5_hMw\",\n  authDomain: \"ukov-d4d34.firebaseapp.com\",\n  projectId: \"ukov-d4d34\",\n  storageBucket: \"ukov-d4d34.appspot.com\",\n  messagingSenderId: \"177229184464\",\n  appId: \"1:177229184464:web:cc3e84e16c7cbba4240dd5\",\n  measurementId: \"G-YKKLWCD0V6\"\n};\n  // Initialize Firebase\n  \n\n\nexport const fbase = firebase.initializeApp(firebaseConfig);\nexport const analytics = firebase.analytics();\nexport const dbService = firebase.firestore();\nexport const auth =firebase.auth();\nexport const firebaseInstance = firebase;\nexport const storageService = firebase.storage()","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport '../css/FAQ.css'\n\n\nfunction FAQ({userObj}) {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [FAQ, setFAQ] = useState([])\n    const getFAQ = async () =>{\n        const dbFAQ = await dbService.collection(\"FAQ\").get();\n        dbFAQ.forEach((document) => {\n            const newFAQ = {\n                ...document.data(),\n                id: document.id\n            };\n            setFAQ((prev) => [newFAQ, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getFAQ();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newQ, setNewQ] = useState(null);\n    const [newA, setNewA] = useState(null);\n    const [newA2, setNewA2] = useState(null);\n    const [newA3, setNewA3] = useState(null);\n    const [newA4, setNewA4] = useState(null);\n    const [newA5, setNewA5] = useState(null);\n    const [newA6, setNewA6] = useState(null);\n    const [newA7, setNewA7] = useState(null);\n    const [newA8, setNewA8] = useState(null);\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onQChange = (event) => {\n        const {target:{value}} = event;\n        setNewQ(value)\n    }\n    const onAChange = (event) => {\n        const {target:{value}} = event;\n        setNewA(value)\n    }\n    const onA2Change = (event) => {\n        const {target:{value}} = event;\n        setNewA2(value)\n    }\n    const onA3Change = (event) => {\n        const {target:{value}} = event;\n        setNewA3(value)\n    }\n    const onA4Change = (event) => {\n        const {target:{value}} = event;\n        setNewA4(value)\n    }\n    const onA5Change = (event) => {\n        const {target:{value}} = event;\n        setNewA5(value)\n    }\n    const onA6Change = (event) => {\n        const {target:{value}} = event;\n        setNewA6(value)\n    }\n    const onA7Change = (event) => {\n        const {target:{value}} = event;\n        setNewA7(value)\n    }\n    const onA8Change = (event) => {\n        const {target:{value}} = event;\n        setNewA8(value)\n    }\n\n\n    const [ACount, setACount] = useState(0)\n    const ACounter = () => {\n        if (ACount > 6){\n        setACount(7)\n    } else {\n        setACount(ACount+1)}\n    }\n    const ACounterReversed = () => {\n        if (ACount < 0){\n            setACount(0)\n        } else {\n        setACount(ACount-1)\n    }\n    }\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault()\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"FAQ\").add({\n            A: newA,\n            A2: newA2,\n            A3: newA3,\n            A4: newA4,\n            A5: newA5,\n            A6: newA6,\n            A7: newA7,\n            A8: newA8,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewQ('')\n        setNewA('')\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    return (\n        <>\n            <div className='title'>리크루트 탭의 FAQ가 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n            <p>데이터 베이스에 줄바꿈이 인식이 안돼서 바꿈 하실 경우 아래 줄에다가 입력해주시면 됩니다!<br/>\n                줄바꿈 필요 없으시면 필요하신 곳 까지 적고 제출 하시면 됩니다 :)<br/><br/><br/>\n            </p>\n            <div className='newFAQ'>\n                <form onSubmit={newSubmit}>\n                    <input  type='text' value={newQ} onChange={onQChange} placeholder='Q를 입력하세요'/><br/>\n                    <input  type='text' value={newA} onChange={onAChange} placeholder='A를 입력해주세요'/><br/>\n                    {ACount > 0 && <input  type='text' value={newA2} onChange={onA2Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 0 &&<br/>}\n\n                    {ACount > 1 && <input  type='text' value={newA3} onChange={onA3Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 1 &&<br/>}\n\n                    {ACount > 2 && <input  type='text' value={newA4} onChange={onA4Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 2 &&<br/>}\n\n                    {ACount > 3 && <input  type='text' value={newA5} onChange={onA5Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 3 &&<br/>}\n\n                    {ACount > 4 && <input  type='text' value={newA6} onChange={onA6Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 4 &&<br/>}\n\n                    {ACount > 5 && <input  type='text' value={newA7} onChange={onA7Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 5 &&<br/>}\n\n                    {ACount > 6 && <input  type='text' value={newA8} onChange={onA8Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 6 &&<br/>}\n\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n                <button onClick={ACounter}>한 줄 추가하기</button>\n                <button onClick={ACounterReversed}>한 줄 없애기</button>\n            </div>\n\n\n            <div className='subtitle'>삭제하기{FAQ.id}</div>\n            <div className='FAQbox'>\n\n            {FAQ.map((FAQ)=>(\n                <>\n                    <div className='FAQ' key={FAQ.id}>\n                          <h1>{FAQ.Q}</h1>\n                          <p>{FAQ.A}</p>\n                          <p>{FAQ.A2}</p>\n                          <p>{FAQ.A3}</p>\n                          <p>{FAQ.A4}</p>\n                          <p>{FAQ.A5}</p>\n                          <p>{FAQ.A6}</p>\n                          <p>{FAQ.A7}</p>\n                          <p>{FAQ.A8}</p>\n                    </div>  \n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`FAQ/${FAQ.id}`).delete()\n                        storageService.refFromURL(FAQ.FAQURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </>\n            ))}    \n                            </div>\n    \n        </>\n    )\n}\n\nexport default FAQ;","import React, { useEffect, useState } from 'react';\nimport { dbService, firebaseInstance ,storageService } from '../fbase';\n\n// 기존 데이터 가져오기\nfunction Info() {\n    const [info, setInfo] = useState();\n    const getInfo = async () =>{\n        const dbinfo = await dbService.collection(\"testinfo\").get();\n        dbinfo.forEach((document) => {\n            const newInfo = {\n                ...document.data(),\n                id: document.id\n            };\n            setInfo(newInfo)\n        });\n    };\n    useEffect(()=>{\n        getInfo();  \n    }, [])\n\n    // 변경될 값들 state설정하기\n    let [Link, setNewLink] = useState(info?.Link)\n    let [Finish, setNewFinish] = useState(info?.Finish)\n    let [Alumni, setNewAlumni] = useState(info?.Alumni)\n    let [resumePass, setNewresumePass] = useState(info?.resumePass)\n    let [start_date, setNewstart_date] = useState(info?.start_date)\n    let [project, setNewproject] = useState(info?.project)\n    let [end_date, setNewend_date] = useState(info?.end_date)\n    let [meeting1, setNewmeeting1] = useState(info?.meeting1)\n    let [meeting2, setNewmeeting2] = useState(info?.meeting2)\n    let [th, setNewth] = useState(info?.th)\n    let [year, setNewyear] = useState(info?.year)\n\n    // input 입력 값 전달받기\n    const newthChange = (event) => {\n        const {target :{value}} = event;\n        setNewth(value)\n    }\n    const newyearChange = (event) => {\n        const {target :{value}} = event;\n        setNewyear(value)\n    }\n    const newend_dateChange = (event) => {\n        const {target :{value}} = event;\n        setNewend_date(value)\n    }\n    const newmeeting1Change = (event) => {\n        const {target :{value}} = event;\n        setNewmeeting1(value)\n    }\n    const newmeeting2Change = (event) => {\n        const {target :{value}} = event;\n        setNewmeeting2(value)\n    }\n    const newprojectChange = (event) => {\n        const {target :{value}} = event;\n        setNewproject(value)\n    }\n    const newresumePassChange = (event) => {\n        const {target :{value}} = event;\n        setNewresumePass(value)\n    }\n    const newstart_dateChange = (event) => {\n        const {target :{value}} = event;\n        setNewstart_date(value)\n    }\n    const newLinkChange = (event) => {\n        const {target :{value}} = event;\n        setNewLink(value)\n    }\n    const newFinishChange = (event) => {\n        const {target :{value}} = event;\n        setNewFinish(value)\n    }\n    const newAlumniChange = (event) => {\n        const {target :{value}} = event;\n        setNewAlumni(value)\n    }\n\n    // input으로 file 들어오는 것 storage에 들어가고, url 가져오기\n    const [newFile, setNewFile] = useState()\n    const newfileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        reader.readAsDataURL(theFile);\n        \n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일 이름 및 위치, url받아오기\n        const fireRef = storageService.ref().child(`이름_Ukov_${info?.th}기_지원서.docx`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        const file = await response.ref.getDownloadURL();\n\n        //update가 오류가 있 삭제 후 다시 만들기 / 가끔 add가 2번 들어가는 현상이 발생하여 delete를 3번 호출 / 아예 info자체가 사라지는 현상이 발생하여 if문 삽입\n        if (info?.id === '') {\n        } else {\n            await dbService.collection('testinfo').doc(info?.id).delete()\n            await dbService.collection('testinfo').doc(info?.id).delete()\n            await dbService.collection('testinfo').doc(info?.id).delete()\n        } \n        \n        await dbService.collection('testinfo').add({\n            // finish: firebaseInstance.firestore.Timestamp.fromDate(Finish),\n            Link,\n            alumni: Alumni,\n            end_date,\n            start_date,\n            file: file,\n            meeting1,\n            meeting2,\n            project,\n            resumePass,\n            th,\n            year,\n        });\n\n        // 값을 push하고 input초기화\n        setNewFile('')\n        setNewFinish('')\n        setNewLink('')\n        setNewend_date('')\n        setNewmeeting1('')\n        setNewmeeting2('')\n        setNewproject('')\n        setNewresumePass('')\n        setNewstart_date('')\n        setNewth('')\n        setNewyear('')\n        setNewAlumni('')\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n\n    \n    return (\n        <>\n        <div className='title'>페이지에 들어갈 전반적인 정보들을 수정합니다.<br/><br/>\n            흐릿하게 쓰여져 있는 것들은 현재 홈페이지에 쓰여있는 내용들입니다.<br/>\n            <b>정보들을 모두 입력</b>하고(파일도 추가하고) 제출해주셔야 정상 제출 됩니다!<br/>\n            참고하셔서 수정하시고 수정하시면 홈페이지에 바로 수정됩니당~~~</div><br/><br/>\n        <form onSubmit={onSubmit}>\n            <input value={Link} onChange={newLinkChange} placeholder={info?.Link}/>구글 독스, typeform등 서류 받을 링크를 넣어주세요<br/><br/>\n            지원서(docx...)를 넣어주세요<input type='file' onChange={newfileChange} /><br/><br/>\n            <input value={th} onChange={newthChange} placeholder={info?.th} type='number' />이제 몇기를 뽑는 것일까요?<br/>\n            <input value={year} onChange={newyearChange} placeholder={info?.year} type='number'/>유코브는 몇년 됐나요?<br/>\n            <input value={Alumni} onChange={newAlumniChange} placeholder={info?.alumni} type='number'/>지금까지 몇명의 ukov알럼나이가 있나요?<br/>\n\n            <input value={project} onChange={newprojectChange} placeholder={info?.project} type='number'/>유코브는 지금까지 몇 개의 프로젝트를 했나요?<br/><br/>\n\n            <p>홈페이지에 그대로 나오니 원하는 대로 적어주시면 됩니다 :)</p>\n            <input value={start_date} onChange={newstart_dateChange} placeholder={info?.start_date}/>언제부터 모집이 시작되나요?<br/>\n            <input value={end_date} onChange={newend_dateChange} placeholder={info?.end_date}/>언제 모집이 마감되나요?<br/>\n            <input value={resumePass} onChange={newresumePassChange} placeholder={info?.resumePass}/>서류 합격 발표일은 언제일까요?<br/>\n            <input value={meeting1} onChange={newmeeting1Change} placeholder={info?.meeting1}/>첫 번째 면접 날<br/>\n            <input value={meeting2} onChange={newmeeting2Change} placeholder={info?.meeting2}/>두 번째 면접 날<br/><br/>\n\n            <p>이건 날짜 데이터 따로 받습니다! 날짜 넣으시면 시간에 맞게 리크루팅 탭에 지원하기 버튼이 생기고 사라집니다</p>\n\n            <input value={Finish} onChange={newFinishChange} type='date'/>서류 마감날짜를 넣어주세요<br/>\n            <input type='submit' value=\"수정하기\" className='button' />\n        </form>\n        </>\n    )\n}\n\nexport default Info;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport '../css/internship.css';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Internship({userObj}) {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [internship, setInternship] = useState([])\n    const getInternship = async () =>{\n        const dbinternship = await dbService.collection(\"internship\").get();\n        dbinternship.forEach((document) => {\n            const newinternship = {\n                ...document.data(),\n                id: document.id\n            };\n            setInternship((prev) => [newinternship, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getInternship();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newInternshipLink, setNewInternshipLink] = useState();\n    const [newTitle, setNewTitle] = useState();\n    const [newSubtitle, setNewSubtitle] = useState();\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewInternshipLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        const fireRef = storageService.ref().child(`internship/${uuidv4()}`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        const internshipURL = await response.ref.getDownloadURL();\n\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"internship\").add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            internshipLink: newInternshipLink,\n            internshipURL,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewInternshipLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile()\n        alert('홈페이지에서 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    const [newFile, setNewFile] = useState()\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    return (\n        <>\n            <div className='title'>홈탭의 UKOV후기와 프로그램탭의 스타트업 인턴십 <b>두곳 모두</b> 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit}>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                    <input  type='text' value={newInternshipLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n            <div className='subtitle'>삭제하기{internship.id}</div>\n\n\n            {internship.map((internship)=>(\n                <>\n                  <div className='listBox' key={internship.id}>\n                      <a href={internship.internshipLink}>\n                          <div className='smallBox'>\n                            <img src={internship.internshipURL} alt='internship'/>\n                          </div>\n                          <h1>{internship.title}</h1>\n                          <h2>{internship.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`internship/${internship.id}`).delete()\n                        storageService.refFromURL(internship.internshipURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Internship;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Networking() {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [networking, setnetworking] = useState([])\n    const getnetworking = async () =>{\n        const dbnetworking = await dbService.collection(\"networking\").get();\n        dbnetworking.forEach((document) => {\n            const newnetworking = {\n                ...document.data(),\n                id: document.id\n            };\n            setnetworking((prev) => [newnetworking, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getnetworking();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newnetworkingLink, setNewnetworkingLink] = useState();\n    const [newTitle, setNewTitle] = useState();\n    const [newSubtitle, setNewSubtitle] = useState();\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewnetworkingLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        const fireRef = storageService.ref().child(`networking/${uuidv4()}`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        const networkingURL = await response.ref.getDownloadURL();\n\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"networking\").add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            networkingLink: newnetworkingLink,\n            networkingURL,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewnetworkingLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile()\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    const [newFile, setNewFile] = useState()\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    return (\n        <>\n            <div className='title'>프로그램탭의 네트워킹이 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit}>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                    <input  type='text' value={newnetworkingLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n            <div className='subtitle'>삭제하기{networking.id}</div>\n\n\n            {networking.map((networking)=>(\n                <>\n                  <div className='listBox' key={networking.id}>\n                      <a href={networking.networkingLink}>\n                          <div className='smallBox'>\n                            <img src={networking.networkingURL} alt='networking'/>\n                          </div>\n                          <h1>{networking.title}</h1>\n                          <h2>{networking.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`networking/${networking.id}`).delete()\n                        storageService.refFromURL(networking.networkingURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Networking;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Partner() {\n    // partner 정보 받아오기\n\n        const [partner, setpartner] = useState([]);\n        const getpartner = async () =>{\n            const dbpartner = await dbService.collection(\"partner\").orderBy(\"createdAt\").get();\n            dbpartner.forEach((document) => {\n                const newpartner = {\n                    ...document.data(),\n                    id: document.id\n                };\n                setpartner((prev) => [newpartner, ...prev]);\n            });\n        };\n        useEffect(()=>{\n            getpartner();  \n        }, [])\n        let [Link, setNewLink] = useState('')\n        const newLinkChange = (event) => {\n            const {target :{value}} = event;\n            setNewLink(value)\n        }\n\n        const [newFile, setNewFile] = useState()\n        const newfileChange = (event) => {\n            const {\n                target: {files}\n            } = event;\n            const theFile = files[0];\n            const reader = new FileReader();\n            reader.onloadend = (finishedEvent) => {\n                setNewFile(finishedEvent.currentTarget.result)\n            };\n            reader.readAsDataURL(theFile);\n            \n        };\n\n        const newSubmit = async (event) => {\n            event.preventDefault();\n    \n            // 파일을 스토리지에 업로드하기\n            const fireRef = storageService.ref().child(`partner/${uuidv4()}`)\n            const response = await fireRef.putString(newFile, \"data_url\")\n            const partnerURL = await response.ref.getDownloadURL();\n    \n    \n            // 스트링 정보를 넣어주기\n            await dbService.collection(\"partner\").add({\n                partnerLink: Link,\n                partnerURL: partnerURL,\n                createdAt: Date.now(),\n            })\n    \n            // 새로 업로드 후 input 태그 초기화\n            setNewLink('')\n            alert('새로고침 하신 후 확인해보세요 :)')\n        }\n    \n\n\n\n\n\n    return (\n        <>\n        <div className='title'>홈탭의 UKOV후기와 프로그램탭의 스타트업 인턴십 <b>두곳 모두</b> 수정되는 곳입니다!</div>\n        <div className='subtitle'> 추가하기 </div>\n\n            <form onSubmit={newSubmit}>\n            이미지 파일을 추가하세요<input type='file' onChange={newfileChange}/>\n            {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                <input  type='text' value={Link} onChange={newLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                <input  type='submit' value=\"추가하기\" className='button'/>\n            </form>\n\n        <div className='subtitle'>삭제하기 </div>\n        {partner.map((partner)=>(\n            <>\n              <div className='listBox' key={partner.id}>\n                  <a href={partner.partnerLink}>\n                      <div className='smallBox'>\n                        <img src={partner.partnerURL} alt={partner.partnerLink}/>\n                      </div>\n                  </a>\n                <button onClick={()=>{\n                    // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                    const del = window.confirm(\"지우시겠습니까?\");\n                        if (del) {\n                    dbService.doc(`partner/${partner.id}`).delete()\n                    storageService.refFromURL(partner.partnerURL).delete()\n                    alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                }\n                }}>삭제하기</button>\n                </div>\n            </>\n        ))}        \n    </>\n)  \n\n}\n\nexport default Partner;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Project() {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [project, setproject] = useState([])\n    const getproject = async () =>{\n        const dbproject = await dbService.collection(\"project\").get();\n        dbproject.forEach((document) => {\n            const newproject = {\n                ...document.data(),\n                id: document.id\n            };\n            setproject((prev) => [newproject, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getproject();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newprojectLink, setNewprojectLink] = useState();\n    const [newTitle, setNewTitle] = useState();\n    const [newSubtitle, setNewSubtitle] = useState();\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewprojectLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        const fireRef = storageService.ref().child(`project/${uuidv4()}`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        const projectURL = await response.ref.getDownloadURL();\n\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"project\").add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            projectLink: newprojectLink,\n            projectURL,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewprojectLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile()\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    const [newFile, setNewFile] = useState()\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    return (\n        <>\n            <div className='title'>프로그램탭의 프로젝트가 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit}>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                    <input  type='text' value={newprojectLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button' />\n                </form>\n            <div className='subtitle'>삭제하기{project.id}</div>\n\n\n            {project.map((project)=>(\n                <>\n                  <div className='listBox' key={project.id}>\n                      <a href={project.projectLink}>\n                          <div className='smallBox'>\n                            <img src={project.projectURL} alt='project'/>\n                          </div>\n                          <h1>{project.title}</h1>\n                          <h2>{project.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`project/${project.id}`).delete()\n                        storageService.refFromURL(project.projectURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Project;","import React from 'react';\n\nfunction Recruit() {\n    return (\n        <div>리크루팅탭 선발부분에 들어갈 정보입니다!</div>\n    )\n}\n\nexport default Recruit;","import React from 'react';\nimport { BrowserRouter, Link, Route, Switch } from 'react-router-dom';\nimport FAQ from './components/FAQ';\nimport Info from './components/info';\nimport Internship from './components/internship';\nimport Networking from './components/networking';\nimport Partner from './components/partner';\nimport Project from './components/project';\nimport Recruit from './components/recruit';\nimport './css/admin.css'\n\n\nfunction Admin({userObj}) {\n\n    return (\n    <div className='adminBody'>\n        <BrowserRouter>\n            <ul className='Nav'>\n                <Link className='navItem' exact to='/info'>UKOV 정보</Link>\n                <Link className='navItem' exact to='/internship'>UKOV 후기</Link>\n                <Link className='navItem' exact to='/partner'>다양한 파트너사</Link>\n                <Link className='navItem' exact to='/networking'>네트워킹</Link>\n                <Link className='navItem' exact to='/recruit'>선발부분</Link>\n                <Link className='navItem' exact to='/FAQ'>FAQ</Link>\n                <Link className='navItem' exact to='/project'>미니프로젝트</Link>\n            </ul>\n            <div className='mainContent'>\n            <Switch>\n                <Route exact path={['/', '/info']}>\n                    <Info userObj={userObj} />\n                </Route>\n                <Route exact path='/internship'>\n                    <Internship userObj={userObj} />\n                </Route>\n                <Route exact path='/Partner'>\n                    <Partner />\n                </Route>\n                <Route exact path='/Project'>\n                    <Project />\n                </Route>\n                <Route exact path='/Networking'>\n                    <Networking />\n                </Route>\n                <Route exact path='/recruit'>\n                    <Recruit />\n                </Route>        \n                <Route exact path='/FAQ'>\n                    <FAQ />\n                </Route>\n            </Switch>\n            </div>\n        </BrowserRouter>\n    </div>  \n        );\n}\n\n\nexport default Admin;","import React from 'react';\nimport { auth, firebaseInstance } from './fbase';\nimport './css/login.css'\n\n\n\nfunction Login(){\n    const onClick = async() => {\n        let provider = new firebaseInstance.auth.GoogleAuthProvider()\n        await auth.signInWithPopup(provider)\n    }\n        return (\n        <div className='logInBody'>\n        <div className='firstIntroduce'>\n            안녕하세요! 저는 22기 단장으로 활동했던 최봉수 입니다!<br/>\n            제가 홈페이지를 만들긴 했는데 이런 저런 정보 수정이 필요할 것 같아서 <br/>\n            이렇게 따로 어드민 페이지를 만들었습니다.<br/>\n            자세한 사항은 로그인 하시면 확인할 수 있으니 로그인해주세요 :)<br/><br/>\n\n            <b>ukov계정이 아니면 로그인 안됩니다! 계정 확인 부탁드립니다 :)</b><br/><br/>\n\n\n        </div>\n\n            <button onClick={onClick} name='google'>UKOV계정으로 로그인하기</button>\n        </div>\n    )\n};\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Admin from './admin';\nimport Login from './login';\nimport { auth } from './fbase';\n\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect (() =>{\n    auth.onAuthStateChanged((user)=>{\n      if(user.providerData[0].email.slice(-7,) === 'ukov.kr') {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n        alert('ukov.kr 계정으로 로그인해주세요!')\n      }\n    })\n  }, [])\n\n  return (\n    <>\n    <HashRouter>\n        {isLoggedIn \n        ? <Admin userObj={userObj} />\n        : <Login/>}\n        <div className='info'>\n\n        </div>\n    </HashRouter>\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}
{"version":3,"sources":["fbase.js","components/FAQ.js","components/Help.js","components/info.js","components/internship.js","components/networking.js","components/partner.js","components/project.js","components/recruit.js","admin.js","login.js","App.js","index.js"],"names":["dbService","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firestore","auth","firebaseInstance","storageService","storage","FAQ","userObj","useState","setFAQ","getFAQ","a","collection","get","forEach","document","newFAQ","data","id","prev","useEffect","newQ","setNewQ","newA","setNewA","newA2","setNewA2","newA3","setNewA3","newA4","setNewA4","newA5","setNewA5","newA6","setNewA6","newA7","setNewA7","newA8","setNewA8","ACount","setACount","newSubmit","event","preventDefault","add","A","A2","A3","A4","A5","A6","A7","A8","createdAt","Date","now","alert","className","onSubmit","type","value","onChange","target","placeholder","onClick","map","Q","window","confirm","doc","delete","refFromURL","FAQURL","HELP","href","Info","info","setInfo","getInfo","newInfo","Link","setNewLink","Alumni","setNewAlumni","resumePass","setNewresumePass","start_date","setNewstart_date","project","setNewproject","end_date","setNewend_date","meeting1","setNewmeeting1","meeting2","setNewmeeting2","th","setNewth","year","setNewyear","recruitOver","setRecruitOver","newFile","setNewFile","update","alumni","onFile","fireRef","ref","child","putString","response","getDownloadURL","onToggle","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","Internship","internship","setInternship","getInternship","orderBy","newinternship","newInternshipLink","setNewInternshipLink","newTitle","setNewTitle","newSubtitle","setNewSubtitle","uuidv4","title","subtitle","internshipLink","internshipURL","src","alt","width","height","Networking","networking","setnetworking","getnetworking","newnetworking","newnetworkingLink","setNewnetworkingLink","networkingLink","networkingURL","Partner","partner","setpartner","getpartner","newpartner","partnerLink","partnerURL","Project","setproject","getproject","newproject","newprojectLink","setNewprojectLink","projectLink","projectURL","Recruit","recruit","setrecruit","getrecruit","newrecruit","newrecruitLink","setNewrecruitLink","newtext1","setNewtext1","newtext2","setNewtext2","newtext3","setNewtext3","newtext4","setNewtext4","newtext5","setNewtext5","newtext6","setNewtext6","newtext7","setNewtext7","newtext8","setNewtext8","recruitLink","recruitURL","text1","text2","text3","text4","text5","text6","text7","text8","console","log","Admin","exact","to","path","Login","provider","GoogleAuthProvider","signInWithPopup","name","App","isLoggedIn","setIsLoggedIn","onAuthStateChanged","user","providerData","email","slice","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.930e00db.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\nimport \"firebase/auth\";\nimport 'firebase/storage';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyD8vqF42c93GBQTddLW2ogqMBrTsd5_hMw\",\n  authDomain: \"ukov-d4d34.firebaseapp.com\",\n  projectId: \"ukov-d4d34\",\n  storageBucket: \"ukov-d4d34.appspot.com\",\n  messagingSenderId: \"177229184464\",\n  appId: \"1:177229184464:web:cc3e84e16c7cbba4240dd5\",\n  measurementId: \"G-YKKLWCD0V6\"\n};\n  // Initialize Firebase\n  \n\n\nexport const fbase = firebase.initializeApp(firebaseConfig);\nexport const analytics = firebase.analytics();\nexport const dbService = firebase.firestore();\nexport const auth =firebase.auth();\nexport const firebaseInstance = firebase;\nexport const storageService = firebase.storage()","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport '../css/FAQ.css'\n\n\nfunction FAQ({userObj}) {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [FAQ, setFAQ] = useState([])\n    const getFAQ = async () =>{\n        const dbFAQ = await dbService.collection(\"FAQ\").get();\n        dbFAQ.forEach((document) => {\n            const newFAQ = {\n                ...document.data(),\n                id: document.id\n            };\n            setFAQ((prev) => [newFAQ, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getFAQ();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newQ, setNewQ] = useState(null);\n    const [newA, setNewA] = useState(null);\n    const [newA2, setNewA2] = useState(null);\n    const [newA3, setNewA3] = useState(null);\n    const [newA4, setNewA4] = useState(null);\n    const [newA5, setNewA5] = useState(null);\n    const [newA6, setNewA6] = useState(null);\n    const [newA7, setNewA7] = useState(null);\n    const [newA8, setNewA8] = useState(null);\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onQChange = (event) => {\n        const {target:{value}} = event;\n        setNewQ(value)\n    }\n    const onAChange = (event) => {\n        const {target:{value}} = event;\n        setNewA(value)\n    }\n    const onA2Change = (event) => {\n        const {target:{value}} = event;\n        setNewA2(value)\n    }\n    const onA3Change = (event) => {\n        const {target:{value}} = event;\n        setNewA3(value)\n    }\n    const onA4Change = (event) => {\n        const {target:{value}} = event;\n        setNewA4(value)\n    }\n    const onA5Change = (event) => {\n        const {target:{value}} = event;\n        setNewA5(value)\n    }\n    const onA6Change = (event) => {\n        const {target:{value}} = event;\n        setNewA6(value)\n    }\n    const onA7Change = (event) => {\n        const {target:{value}} = event;\n        setNewA7(value)\n    }\n    const onA8Change = (event) => {\n        const {target:{value}} = event;\n        setNewA8(value)\n    }\n\n\n    const [ACount, setACount] = useState(0)\n    const ACounter = () => {\n        if (ACount > 6){\n        setACount(7)\n    } else {\n        setACount(ACount+1)}\n    }\n    const ACounterReversed = () => {\n        if (ACount < 0){\n            setACount(0)\n        } else {\n        setACount(ACount-1)\n    }\n    }\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault()\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"FAQ\").add({\n            A: newA,\n            A2: newA2,\n            A3: newA3,\n            A4: newA4,\n            A5: newA5,\n            A6: newA6,\n            A7: newA7,\n            A8: newA8,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewQ('')\n        setNewA('')\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    return (\n        <>\n        <div className='newFAQ'>\n            <div className='title'>리크루트 탭의 FAQ가 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n            <p>데이터 베이스에 줄바꿈이 인식이 안돼서 줄바꿈 하실 경우 아래 줄에다가 입력해주시면 됩니다!<br/>\n                줄바꿈 필요 없으시면 필요하신 곳 까지 적고 제출 하시면 됩니다 :)<br/><br/><br/>\n            </p>\n            <div className='editBox'>                <form onSubmit={newSubmit} >\n                    <input  type='text' value={newQ} onChange={onQChange} placeholder='Q를 입력하세요'/><br/>\n                    <input  type='text' value={newA} onChange={onAChange} placeholder='A를 입력해주세요'/><br/>\n                    {ACount > 0 && <input  type='text' value={newA2} onChange={onA2Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 0 &&<br/>}\n\n                    {ACount > 1 && <input  type='text' value={newA3} onChange={onA3Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 1 &&<br/>}\n\n                    {ACount > 2 && <input  type='text' value={newA4} onChange={onA4Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 2 &&<br/>}\n\n                    {ACount > 3 && <input  type='text' value={newA5} onChange={onA5Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 3 &&<br/>}\n\n                    {ACount > 4 && <input  type='text' value={newA6} onChange={onA6Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 4 &&<br/>}\n\n                    {ACount > 5 && <input  type='text' value={newA7} onChange={onA7Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 5 &&<br/>}\n\n                    {ACount > 6 && <input  type='text' value={newA8} onChange={onA8Change} placeholder='A를 입력해주세요'/>}\n                    {ACount > 6 &&<br/>}\n\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n                <br/><br/><br/>\n                <button onClick={ACounter}>한 줄 추가하기</button>\n                <button onClick={ACounterReversed}>한 줄 없애기</button>\n            </div>\n            </div>\n\n\n            <div className='subtitle'>삭제하기{FAQ.id}</div>\n            <div className='FAQbox'>\n\n            {FAQ.map((FAQ)=>(\n                <>\n                    <div className='FAQ' key={FAQ.id}>\n                          <h1>{FAQ.Q}</h1>\n                          <p>{FAQ.A}</p>\n                          <p>{FAQ.A2}</p>\n                          <p>{FAQ.A3}</p>\n                          <p>{FAQ.A4}</p>\n                          <p>{FAQ.A5}</p>\n                          <p>{FAQ.A6}</p>\n                          <p>{FAQ.A7}</p>\n                          <p>{FAQ.A8}</p>\n                    </div>  \n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`FAQ/${FAQ.id}`).delete()\n                        storageService.refFromURL(FAQ.FAQURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </>\n            ))}    \n                            </div>\n    \n        </>\n    )\n}\n\nexport default FAQ;","import React from 'react';\n\nfunction HELP() {\n    return (\n        <>\n        <div>\n        안녕하세요! 22기 단장으로 활동했던 최봉수라고 합니다 :)<br/><br/>\n        우선 유코브 합격하신 것 축하드립니다!<br/> \n        이 글을 볼 쯤은 아마 충분히 인턴십도 경험하구 다음기수 리크루팅할 시점이겠죠?<br/>\n        마지막까지 화이팅하셔요! 어려운 시간 동안 어려운 도전하시느라 고생 많으십니다 ㅠㅠ 늘 응원하고 있겠습니다<br/><br/>\n        페이지 사용에 대한 간단한 도움 말 드립니다!<br/><br/>\n        우선 혹시 홈페이지 자체를 수정하셔야 할 경우<br/><br/>\n        <a href='https://github.com/11t518s/ukov_admin'>이곳</a>에서 클론해 가셔서 수정하시면 됩니다.<br/><br/>\n\n        홈페이지 수정하는 것은 언제나 환영합니다! 편하게 하시구 나중에 괜찮으시면 알려주시면 더 좋겠네요!<br/>\n        이런저런 내용은 readme에 써뒀으니 참고 부탁드립니다.<br/><br/>\n\n        혹시 개발을 할 줄 모르는 단원만 있다면 단장님 계정에서 전체 계정정보에 제 핸드폰 번호있으니 연락주세요!<br/>\n        ukov계정으로 인스타 dm주셔도 되고, 전 단장님을 통해 ukov톡방으로 연락주셔도 좋습니다 :)<br/><br/>\n\n        url을 한번 ukov.kr로 갱신하고 싶은데, 아마 10~12월 쯤 ukov.co.kr이 만료될 것 같아서 그때 단장님과 개발자님이 힘 써주길 바랍니다 :)<br/>\n        지금은 netlify를 사용해서 url연결했고, firebase로 db를 만든터라 많이 부족해서요 ㅠㅠ<br/><br/>\n\n        제가 디자인 쪽과 ui라는 개념이 많이 부족해서 어드민 페이지 자체도 어려워보이네요 ㅠㅠ<br/>\n        그래도 여러분은 저보다 훌륭하신 분이라 부족한 저의 페이지도 잘 이해해주시리라 믿습니다 ㅎㅎ<br/><br/>\n\n        어쨋든 수정할 수 있게 해뒀으니 어떤 것인지 모르겠으면 해보시면서 알아가도 괜찮을 것 같아요!<br/>\n        일단 수정하는 것까진 구현하지 않았고, 삭제와 업로드로만 구현해뒀습니다.<br/>\n        올린 순서대로 올라가게 해뒀으니 참고 부탁드립니다.<br/><br/>\n        \n        혹시 어려운 일 생기면 언제든 저 뿐만 아니라 다양한 선배 기수분들께 말씀해주세요! 기다리고 있겠습니다!<br/>\n        마무리 잘하시구 나중에 좋은 자리에서 뵙길 바라고 있겠습니다 :)<br/>\n\n\n\n        \n        </div>\n        </>\n\n    )\n}\n\nexport default HELP;","import React, { useEffect, useState } from 'react';\nimport { dbService ,storageService } from '../fbase';\n\n// 기존 데이터 가져오기\nfunction Info() {\n    const [info, setInfo] = useState();\n    const [File, setFile] = useState();\n    const [toggle, settoggle] = useState();\n\n    const getInfo = async () =>{\n        const dbinfo = await dbService.collection(\"UKOV\").get();\n        dbinfo.forEach((document) => {\n            const newInfo = {\n                ...document.data(),\n                id: document.id\n            };\n            setInfo(newInfo)\n        });\n    };\n    useEffect(()=>{\n        getInfo();  \n    }, []);\n    // 변경될 값들 state설정하기\n    const [Link, setNewLink] = useState(info?.Link);\n    const [Alumni, setNewAlumni] = useState(info?.Alumni);\n    const [resumePass, setNewresumePass] = useState(info?.resumePass);\n    const [start_date, setNewstart_date] = useState(info?.start_date);\n    const [project, setNewproject] = useState(info?.project);\n    const [end_date, setNewend_date] = useState(info?.end_date);\n    const [meeting1, setNewmeeting1] = useState(info?.meeting1);\n    const [meeting2, setNewmeeting2] = useState(info?.meeting2);\n    const [th, setNewth] = useState(info?.th);\n    const [year, setNewyear] = useState(info?.year);\n\n    const newthChange = (event) => {\n        const {target :{value}} = event;\n        setNewth(value)\n    };\n    const newyearChange = (event) => {\n            const {target :{value}} = event;\n            setNewyear(value)\n    };\n    const newend_dateChange = (event) => {\n            const {target :{value}} = event;\n            setNewend_date(value)\n    };\n    const newmeeting1Change = (event) => {\n            const {target :{value}} = event;\n            setNewmeeting1(value)\n    };\n    const newmeeting2Change = (event) => {\n            const {target :{value}} = event;\n            setNewmeeting2(value)\n    };\n    const newprojectChange = (event) => {\n            const {target :{value}} = event;\n            setNewproject(value)\n    };\n    const newresumePassChange = (event) => {\n            const {target :{value}} = event;\n            setNewresumePass(value)\n    };\n    const newstart_dateChange = (event) => {\n            const {target :{value}} = event;\n            setNewstart_date(value)\n    };\n    const newLinkChange = (event) => {\n            const {target :{value}} = event;\n            setNewLink(value)\n    };\n    const newAlumniChange = (event) => {\n        const {target :{value}} = event;\n        setNewAlumni(value)\n    };\n\n\n\n    // 리크루트 탭 지원하러가기 버튼과 멘트 수정을 위한 state\n    const [recruitOver, setRecruitOver] = useState(true)\n\n\n    // \n    // input으로 file 들어오는 것 storage에 들어가고, url 가져오기\n    const [newFile, setNewFile] = useState(null)\n    const newfileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        if(theFile){\n            reader.readAsDataURL(theFile);}\n\n\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.collection(`UKOV`).doc(info?.id).update({\n            Link: Link,\n            alumni: Alumni,\n            end_date: end_date,\n            meeting1: meeting1,\n            meeting2: meeting2,\n            project: project,\n            resumePass: resumePass,\n            start_date: start_date,\n            th: th,\n            year: year,\n        });\n        alert('새로고침 하신 후 확인해보세요 :)');\n    };\n\n\n\n    const onFile = async (event) => {\n        event.preventDefault();\n        // 파일 이름 및 위치, url받아오기\n        if (newFile){\n            const fireRef = storageService.ref().child(`이름_UKOV_${info?.th}기_지원서.docx`)\n            const response = await fireRef.putString(newFile, \"data_url\")\n            setNewFile(response.ref.getDownloadURL())\n            };\n        await dbService.collection(`UKOV`).doc(info?.id).update({\n            recruitOver\n        });\n        alert('새로고침 하신 후 확인해보세요 :)');\n    };\n    const onToggle = async (event) => {\n        event.preventDefault();\n        await dbService.collection(`UKOV`).doc(info?.id).update({\n            recruitOver\n        });\n        alert('새로고침 하신 후 확인해보세요 :)');\n    };\n    return (\n        <>\n        <div className='title'>페이지에 들어갈 전반적인 정보들을 수정합니다.<br/><br/>\n            첫 번째 박스은 정보를 <b>모두 넣고</b>수정하기 눌러주세요 <br/>\n            두 번째 박스는 지원서 파일을 업로드 합니다 <br/>\n            마지막은 마지막 리크루트 탭 지원하기 링크(첫 번째 박스에서 입력한 링크)를 홈페이지에 띄웁니다.</div><br/>\n        <form onSubmit={onSubmit} className='editBox'>\n            <input value={Link || ''} onChange={newLinkChange} placeholder={info?.Link}/>구글 독스, typeform등 서류 받을 링크를 넣어주세요<br/><br/>\n            <input value={th || ''} onChange={newthChange} placeholder={info?.th} />이제 몇기를 뽑는 것일까요?<br/>\n            <input value={year || ''} onChange={newyearChange} placeholder={info?.year}/>유코브는 몇년 됐나요?<br/>\n            <input value={Alumni || ''} onChange={newAlumniChange} placeholder={info?.alumni}/>지금까지 몇명의 ukov알럼나이가 있나요?<br/>\n\n            <input value={project || ''} onChange={newprojectChange} placeholder={info?.project}/>유코브는 지금까지 몇 개의 프로젝트를 했나요?<br/><br/>\n\n            <p>홈페이지에 그대로 나오니 원하는 대로 적어주시면 됩니다 :)</p>\n            <input value={start_date || ''} onChange={newstart_dateChange} placeholder={info?.start_date}/>언제부터 모집이 시작되나요?<br/>\n            <input value={end_date || ''} onChange={newend_dateChange} placeholder={info?.end_date}/>언제 모집이 마감되나요?<br/>\n            <input value={resumePass || ''} onChange={newresumePassChange} placeholder={info?.resumePass}/>서류 합격 발표일은 언제일까요?<br/>\n            <input value={meeting1 || ''} onChange={newmeeting1Change} placeholder={info?.meeting1}/>첫 번째 면접 날<br/>\n            <input value={meeting2 || ''} onChange={newmeeting2Change} placeholder={info?.meeting2}/>두 번째 면접 날<br/><br/>\n            <input type='submit' value=\"수정하기\" className='button' /> \n            <br/>\n        </form>\n        <form className='editBox' onSubmit={onFile}>\n            <p className='title'>여기서는 별도로 리크루팅 탭에 지원하기 버튼이 생기고 사라집니다</p>\n            지원서(docx...)를 넣어주세요<input type='file' onChange={newfileChange} /><br/><br/>\n            <input type='submit' value=\"추가하기\" className='button' /> \n\n        </form>\n        <form className='editBox' onSubmit={onToggle}>\n            <p className='title'>여기서는 별도로 리크루팅 탭에 지원하기 버튼이 생기고 사라집니다</p>\n                {recruitOver\n                ?<button className='button' onClick={()=>setRecruitOver(false)}>버튼 만들기</button>\n                :<button className='button' onClick={()=>setRecruitOver(true)}>버튼 없애기</button>\n                }\n        </form>\n        </>\n    )\n};\n\nexport default Info;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport '../css/internship.css';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Internship() {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [internship, setInternship] = useState([])\n    const getInternship = async () =>{\n        const dbinternship = await dbService.collection(\"internship\").orderBy('createdAt').get();\n        dbinternship.forEach((document) => {\n            const newinternship = {\n                ...document.data(),\n                id: document.id\n            };\n            setInternship((prev) => [newinternship, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getInternship();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newInternshipLink, setNewInternshipLink] = useState(null);\n    const [newTitle, setNewTitle] = useState(null);\n    const [newSubtitle, setNewSubtitle] = useState(null);\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewInternshipLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    const [newFile, setNewFile] = useState(null)\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        if(theFile){\n            reader.readAsDataURL(theFile);}\n    };\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        if (newFile){\n            const fireRef = storageService.ref().child(`recruit/${uuidv4()}`)\n            const response = await fireRef.putString(newFile, \"data_url\")\n            setNewFile(response.ref.getDownloadURL())\n            }\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"internship\").add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            internshipLink: newInternshipLink,\n            internshipURL: newFile,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewInternshipLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile()\n        alert('홈페이지에서 확인해보세요 :)')\n    }\n\n\n    return (\n        <>\n            <div className='title'>홈탭의 UKOV후기와 프로그램탭의 스타트업 인턴십 <b>두곳 모두</b> 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit} className='editBox'>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                    <input  type='text' value={newInternshipLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n            <div className='subtitle'>삭제하기{internship.id}</div>\n\n\n            {internship.map((internship)=>(\n                <>\n                  <div className='listBox' key={internship.id}>\n                      <a href={internship.internshipLink}>\n                          <div className='smallBox'>\n                            <img src={internship.internshipURL} alt='internship'/>\n                          </div>\n                          <h1>{internship.title}</h1>\n                          <h2>{internship.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`internship/${internship.id}`).delete()\n                        storageService.refFromURL(internship.internshipURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Internship;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Networking() {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [networking, setnetworking] = useState([])\n    const getnetworking = async () =>{\n        const dbnetworking = await dbService.collection(\"networking\").orderBy('createdAt').get();\n        dbnetworking.forEach((document) => {\n            const newnetworking = {\n                ...document.data(),\n                id: document.id\n            };\n            setnetworking((prev) => [newnetworking, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getnetworking();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newnetworkingLink, setNewnetworkingLink] = useState(null);\n    const [newTitle, setNewTitle] = useState(null);\n    const [newSubtitle, setNewSubtitle] = useState(null);\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewnetworkingLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    const [newFile, setNewFile] = useState(null)\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        if(theFile){\n            reader.readAsDataURL(theFile);}\n    };\n\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        if (newFile){\n            const fireRef = storageService.ref().child(`recruit/${uuidv4()}`)\n            const response = await fireRef.putString(newFile, \"data_url\")\n            setNewFile(response.ref.getDownloadURL())\n            }\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"networking\").add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            networkingLink: newnetworkingLink,\n            networkingURL: newFile,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewnetworkingLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile('')\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n\n    return (\n        <>\n            <div className='title'>프로그램탭의 네트워킹이 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit} className='editBox'>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                    <input  type='text' value={newnetworkingLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n            <div className='subtitle'>삭제하기{networking.id}</div>\n\n            {networking.map((networking)=>(\n                <>\n                  <div className='listBox' key={networking.id}>\n                      <a href={networking.networkingLink}>\n                          <div className='smallBox'>\n                            <img src={networking.networkingURL} alt='networking'/>\n                          </div>\n                          <h1>{networking.title}</h1>\n                          <h2>{networking.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`networking/${networking.id}`).delete()\n                        storageService.refFromURL(networking.networkingURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Networking;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Partner() {\n    // partner 정보 받아오기\n\n        const [partner, setpartner] = useState([]);\n        const getpartner = async () => {\n                    const dbpartner = await dbService.collection(\"partner\").orderBy(\"createdAt\").get();\n                    dbpartner.forEach((document) => {\n                                const newpartner = {\n                                    ...document.data(),\n                                    id: document.id\n                                };\n                setpartner((prev) => [newpartner, ...prev]);\n            });\n        };\n        useEffect(()=>{\n            getpartner();  \n        }, [])\n        let [Link, setNewLink] = useState('')\n        const newLinkChange = (event) => {\n            const {target :{value}} = event;\n            setNewLink(value)\n        }\n\n        const [newFile, setNewFile] = useState(null)\n        const newfileChange = (event) => {\n            const {\n                target: {files}\n            } = event;\n            const theFile = files[0];\n            const reader = new FileReader();\n            reader.onloadend = (finishedEvent) => {\n                setNewFile(finishedEvent.currentTarget.result)\n            };\n            if(theFile){\n                reader.readAsDataURL(theFile);}\n        };\n\n        const newSubmit = async (event) => {\n            event.preventDefault();\n    \n            // 파일을 스토리지에 업로드하기\n            if (newFile){\n                const fireRef = storageService.ref().child(`recruit/${uuidv4()}`)\n                const response = await fireRef.putString(newFile, \"data_url\")\n                setNewFile(response.ref.getDownloadURL())\n                }\n        \n    \n    \n            // 스트링 정보를 넣어주기\n            await dbService.collection(\"partner\").add({\n                partnerLink: Link,\n                partnerURL: newFile,\n                createdAt: Date.now(),\n            })\n    \n            // 새로 업로드 후 input 태그 초기화\n            setNewLink('')\n            alert('새로고침 하신 후 확인해보세요 :)')\n        }\n    return (\n        <>\n        <div className='title'>홈탭의 파트너사가 수정되는 곳입니다!</div>\n        <div className='subtitle'> 추가하기 </div>\n\n            <form onSubmit={newSubmit} className='editBox'>\n            이미지 파일을 추가하세요<input type='file' onChange={newfileChange}/>\n            {newFile && <img src={newFile} alt='file' width='300px' />}<br/>\n                <input  type='text' value={Link} onChange={newLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                <input  type='submit' value=\"추가하기\" className='button'/>\n            </form>\n\n        <div className='subtitle'>삭제하기 </div>\n        {partner.map((partner)=>(\n            <>\n              <div className='listBox' key={partner.id}>\n                  <a href={partner.partnerLink}>\n                      <div className='smallBox'>\n                        <img src={partner.partnerURL} alt={partner.partnerLink}/>\n                      </div>\n                  </a>\n                <button className='button2' onClick={()=>{\n                    // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                    const del = window.confirm(\"지우시겠습니까?\");\n                        if (del) {\n                    dbService.doc(`partner/${partner.id}`).delete()\n                    storageService.refFromURL(partner.partnerURL).delete()\n                    alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                }\n                }}>삭제하기</button>\n                </div>\n            </>\n        ))}        \n    </>\n)  \n\n}\n\nexport default Partner;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Project() {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [project, setproject] = useState([])\n    const getproject = async () =>{\n        const dbproject = await dbService.collection(\"project\").orderBy('createdAt').get();\n        dbproject.forEach((document) => {\n            const newproject = {\n                ...document.data(),\n                id: document.id\n            };\n            setproject((prev) => [newproject, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getproject();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newprojectLink, setNewprojectLink] = useState(null);\n    const [newTitle, setNewTitle] = useState(null);\n    const [newSubtitle, setNewSubtitle] = useState(null);\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewprojectLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n\n    const [newFile, setNewFile] = useState(null)\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        if(theFile){\n            reader.readAsDataURL(theFile);}\n    };\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        if (newFile){\n            const fireRef = storageService.ref().child(`recruit/${uuidv4()}`)\n            const response = await fireRef.putString(newFile, \"data_url\")\n            setNewFile(response.ref.getDownloadURL())\n            }\n    \n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"project\").add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            projectLink: newprojectLink,\n            projectURL: newFile,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewprojectLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile('')\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n \n\n    return (\n        <>\n            <div className='title'>프로그램탭의 프로젝트가 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit} className='editBox'>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px'/>}<br/>\n                    <input  type='text' value={newprojectLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button' />\n                </form>\n            <div className='subtitle'>삭제하기{project.id}</div>\n\n\n            {project.map((project)=>(\n                <>\n                  <div className='listBox' key={project.id}>\n                      <a href={project.projectLink}>\n                          <div className='smallBox'>\n                            <img src={project.projectURL} alt='project'/>\n                          </div>\n                          <h1>{project.title}</h1>\n                          <h2>{project.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`project/${project.id}`).delete()\n                        storageService.refFromURL(project.projectURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Project;","import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\n\nfunction Recruit({userObj}) {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [recruit, setrecruit] = useState([])\n    const getrecruit = async () =>{\n        const dbrecruit = await dbService.collection(\"recruit\").orderBy('createdAt').get();\n        dbrecruit.forEach((document) => {\n            const newrecruit = {\n                ...document.data(),\n                id: document.id\n            };\n            setrecruit((prev) => [newrecruit, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getrecruit();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newrecruitLink, setNewrecruitLink] = useState(null);\n    const [newTitle, setNewTitle] = useState(null);\n    const [newtext1, setNewtext1] = useState(null);\n    const [newtext2, setNewtext2] = useState(null);\n    const [newtext3, setNewtext3] = useState(null);\n    const [newtext4, setNewtext4] = useState(null);\n    const [newtext5, setNewtext5] = useState(null);\n    const [newtext6, setNewtext6] = useState(null);\n    const [newtext7, setNewtext7] = useState(null);\n    const [newtext8, setNewtext8] = useState(null);\n\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewrecruitLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const ontext1Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext1(value)\n    }\n    const ontext2Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext2(value)\n    }\n    const ontext3Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext3(value)\n    }\n    const ontext4Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext4(value)\n    }\n    const ontext5Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext5(value)\n    }\n    const ontext6Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext6(value)\n    }\n    const ontext7Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext7(value)\n    }\n    const ontext8Change = (event) => {\n        const {target:{value}} = event;\n        setNewtext8(value)\n    }\n\n        // 파일을 데이터 url로 받아서 화면상에 보여주기\n        const [newFile, setNewFile] = useState(null)\n        const fileChange = (event) => {\n            const {\n                target: {files}\n            } = event;\n\n            const theFile = files[0];\n            const reader = new FileReader();\n            reader.onloadend = (finishedEvent) => {\n                setNewFile(finishedEvent.currentTarget.result)\n            };\n            if(theFile){\n            reader.readAsDataURL(theFile);}\n        };\n    \n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        if (newFile){\n        const fireRef = storageService.ref().child(`recruit/${uuidv4()}`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        setNewFile(response.ref.getDownloadURL())\n        }\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"recruit\").add({\n            title: newTitle,\n            recruitLink: newrecruitLink,\n            recruitURL: newFile,\n            text1: newtext1,\n            text2: newtext2,\n            text3: newtext3,\n            text4: newtext4,\n            text5: newtext5,\n            text6: newtext6,\n            text7: newtext7,\n            text8: newtext8,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewrecruitLink('')\n        setNewTitle('')\n        setNewtext1('')\n        setNewtext2('')\n        setNewtext3('')\n        setNewtext4('')\n        setNewtext5('')\n        setNewtext6('')\n        setNewtext7('')\n        setNewtext8('')\n        setNewFile()\n        alert('홈페이지에서 확인해보세요 :)')\n    }\n\n\n    // 새로운 직무 생길 경우 칸 늘리기\n    const [ACount, setACount] = useState(0)\n    const ACounter = () => {\n        if (ACount > 6){\n        setACount(7)\n    } else {\n        setACount(ACount+1)}\n    }\n    const ACounterReversed = () => {\n        if (ACount < 0){\n            setACount(0)\n        } else {\n        setACount(ACount-1)\n    }\n    }\n\n    \n    console.log(newFile)\n    return (\n        <>\n\n            <div className='title'>리크루팅 탭 선발부분이 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n            <div>\n                <div className='editBox'>\n                <form onSubmit={newSubmit} >\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile === null\n                ? <div></div> \n                : <img src={newFile} alt='file' width='300px' />}<br/>\n                    <input  type='text' value={newrecruitLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='회사 이름을 입력해주세요'/><br/>\n                    <input  type='text' value={newtext1} onChange={ontext1Change} placeholder='직무를 입력해주세요'/><br/>\n\n                    {ACount > 0 && <input  type='text' value={newtext2} onChange={ontext2Change} placeholder='직무를 입력해주세요'/>}\n                    {ACount > 0 &&<br/>}\n\n                    {ACount > 1 && <input  type='text' value={newtext3} onChange={ontext3Change} placeholder='직무를 입력해주세요'/>}\n                    {ACount > 1 &&<br/>}\n\n                    {ACount > 2 && <input  type='text' value={newtext4} onChange={ontext4Change} placeholder='직무를 입력해주세요'/>}\n                    {ACount > 2 &&<br/>}\n\n                    {ACount > 3 && <input  type='text' value={newtext5} onChange={ontext5Change} placeholder='직무를 입력해주세요'/>}\n                    {ACount > 3 &&<br/>}\n\n                    {ACount > 4 && <input  type='text' value={newtext6} onChange={ontext6Change} placeholder='직무를 입력해주세요'/>}\n                    {ACount > 4 &&<br/>}\n\n                    {ACount > 5 && <input  type='text' value={newtext7} onChange={ontext7Change} placeholder='직무를 입력해주세요'/>}\n                    {ACount > 5 &&<br/>}\n\n                    {ACount > 6 && <input  type='text' value={newtext8} onChange={ontext8Change} placeholder='직무를 입력해주세요'/>}\n                    {ACount > 6 &&<br/>}\n\n\n\n\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n                <br/><br/>\n\n                <button onClick={ACounter}>한 줄 추가하기</button>\n                <button onClick={ACounterReversed}>한 줄 없애기</button>\n                </div>\n                </div>\n\n            <div className='subtitle'>삭제하기{recruit.id}</div>\n\n        <div className='wrap'>\n          {recruit.map((recruit)=>(\n              <>\n              <div className='recruitWidth'>\n                <a href={recruit.recruitLink}>\n                    <div><img width='300px' src={recruit.recruitURL} alt={recruit.title}/></div>\n                    <h5>{recruit.title}</h5>\n                    <p>{recruit.text1}</p>\n                    <p>{recruit.text2}</p>\n                    <p>{recruit.text3}</p>\n                    <p>{recruit.text4}</p>\n                    <p>{recruit.text5}</p>\n                    <p>{recruit.text6}</p>\n                    <p>{recruit.text7}</p>\n                    <p>{recruit.text8}</p>\n\n                </a>\n\n                    <button className='button' onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`recruit/${recruit.id}`).delete()\n                        storageService.refFromURL(recruit.recruitURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                </div>\n                </>\n                ))}    \n        </div> \n        </>\n    )\n}\n\nexport default Recruit;","import React from 'react';\nimport { HashRouter, Link, Route, Switch } from 'react-router-dom';\nimport FAQ from './components/FAQ';\nimport HELP from './components/Help';\nimport Help from './components/Help';\nimport Info from './components/info';\nimport Internship from './components/internship';\nimport Networking from './components/networking';\nimport Partner from './components/partner';\nimport Project from './components/project';\nimport Recruit from './components/recruit';\nimport './css/admin.css'\n\n\nfunction Admin() {\n\n    return (\n    <div className='adminBody'>\n        <HashRouter>\n            <ul className='Nav'>\n                <Link className='navItem' exact to='/info'>UKOV 정보</Link>\n                <Link className='navItem' exact to='/internship'>UKOV 후기</Link>\n                <Link className='navItem' exact to='/partner'>다양한 파트너사</Link>\n                <Link className='navItem' exact to='/networking'>네트워킹</Link>\n                <Link className='navItem' exact to='/project'>미니프로젝트</Link>\n\n                <Link className='navItem' exact to='/recruit'>선발부분</Link>\n                <Link className='navItem' exact to='/FAQ'>FAQ</Link>\n                <Link className='navItem' exact to='/HELP'>도와주세요,,</Link>\n\n            </ul>\n            <div className='mainContent'>\n            <Switch>\n                <Route exact path={['/', '/info']}>\n                    <Info />\n                </Route>\n                <Route exact path='/internship'>\n                    <Internship/>\n                </Route>\n                <Route exact path='/Partner'>\n                    <Partner />\n                </Route>\n                <Route exact path='/Project'>\n                    <Project />\n                </Route>\n                <Route exact path='/Networking'>\n                    <Networking />\n                </Route>\n                <Route exact path='/recruit'>\n                    <Recruit />\n                </Route>        \n                <Route exact path='/FAQ'>\n                    <FAQ />\n                </Route>\n                <Route exact path='/help'>\n                    <HELP />\n                </Route>\n            </Switch>\n            </div>\n        </HashRouter>\n    </div>  \n        );\n}\n\n\nexport default Admin;","import React from 'react';\nimport { auth, firebaseInstance } from './fbase';\nimport './css/login.css'\n\n\n\nfunction Login(){\n    const onClick = async() => {\n        let provider = new firebaseInstance.auth.GoogleAuthProvider()\n        await auth.signInWithPopup(provider)\n    }\n        return (\n        <div className='logInBody'>\n        <div className='firstIntroduce'>\n            안녕하세요!<br/>\n            홈페이지를 만들긴 했는데 이런 저런 정보 수정이 필요할 것 같아서 <br/>\n            이렇게 따로 어드민 페이지를 만들었습니다.<br/>\n            자세한 사항은 로그인 하시면 확인할 수 있으니 로그인해주세요 :)<br/><br/>\n\n            <b>ukov계정이 아니면 로그인 안됩니다! 계정 확인 부탁드립니다 :)</b><br/><br/>\n\n\n        </div>\n\n            <button onClick={onClick} name='google'>UKOV계정으로 로그인하기</button>\n        </div>\n    )\n};\nexport default Login;","import React, { useEffect, useState } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Admin from './admin';\nimport Login from './login';\nimport { auth } from './fbase';\n\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect (() =>{\n    auth.onAuthStateChanged((user)=>{\n      if(user.providerData[0].email.slice(-7,) === 'ukov.kr') {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n        alert('ukov.kr 계정으로 로그인해주세요!')\n      }\n    })\n  }, [])\n\n  return (\n    <>\n    <HashRouter>\n        {isLoggedIn \n        ? <Admin/>\n        : <Login/>}\n        <div className='info'>\n\n        </div>\n    </HashRouter>\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}
[{"/Users/bongsu/Documents/GitHub/ukov_admin/src/index.js":"1","/Users/bongsu/Documents/GitHub/ukov_admin/src/fbase.js":"2","/Users/bongsu/Documents/GitHub/ukov_admin/src/components/App.js":"3","/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Footer.js":"4","/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Navbar.js":"5","/Users/bongsu/Documents/GitHub/ukov_admin/src/route/program.js":"6","/Users/bongsu/Documents/GitHub/ukov_admin/src/route/recruit.js":"7","/Users/bongsu/Documents/GitHub/ukov_admin/src/route/home.js":"8","/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Partner.js":"9","/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Carousel/ProjectCarousel.js":"10","/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Carousel/InternshipCarousel.js":"11","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/index.js":"12","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/App.js":"13","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/admin.js":"14","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/fbase.js":"15","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/login.js":"16","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/partner.js":"17","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/info.js":"18","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/FAQ.js":"19","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/internship.js":"20","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/recruit.js":"21","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/project.js":"22","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/networking.js":"23"},{"size":206,"mtime":1620088230403,"results":"24","hashOfConfig":"25"},{"size":562,"mtime":1619866300425,"results":"26","hashOfConfig":"25"},{"size":738,"mtime":1620122298166,"results":"27","hashOfConfig":"25"},{"size":623,"mtime":1619750924398,"results":"28","hashOfConfig":"25"},{"size":2257,"mtime":1620114691621,"results":"29","hashOfConfig":"25"},{"size":2423,"mtime":1620355670011,"results":"30","hashOfConfig":"25"},{"size":8460,"mtime":1620355532474,"results":"31","hashOfConfig":"25"},{"size":8220,"mtime":1620355482144,"results":"32","hashOfConfig":"25"},{"size":1106,"mtime":1620190575764,"results":"33","hashOfConfig":"25"},{"size":1791,"mtime":1620355483285,"results":"34","hashOfConfig":"25"},{"size":1844,"mtime":1620355430798,"results":"35","hashOfConfig":"25"},{"size":194,"mtime":1620831926354,"results":"36","hashOfConfig":"37"},{"size":835,"mtime":1621180297411,"results":"38","hashOfConfig":"37"},{"size":2108,"mtime":1620967904334,"results":"39","hashOfConfig":"37"},{"size":741,"mtime":1620903404659,"results":"40","hashOfConfig":"37"},{"size":1065,"mtime":1620951199445,"results":"41","hashOfConfig":"37"},{"size":3776,"mtime":1621181594375,"results":"42","hashOfConfig":"37"},{"size":7299,"mtime":1621180462959,"results":"43","hashOfConfig":"37"},{"size":109,"mtime":1620881091630,"results":"44","hashOfConfig":"37"},{"size":5057,"mtime":1621051357545,"results":"45","hashOfConfig":"37"},{"size":172,"mtime":1620878670199,"results":"46","hashOfConfig":"37"},{"size":145,"mtime":1620878510938,"results":"47","hashOfConfig":"37"},{"size":130,"mtime":1620878372843,"results":"48","hashOfConfig":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"117ynif",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1h8ww4u",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"/Users/bongsu/Documents/GitHub/ukov_admin/src/index.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/fbase.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/components/App.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Footer.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Navbar.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/route/program.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/route/recruit.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/route/home.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Partner.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Carousel/ProjectCarousel.js",[],"/Users/bongsu/Documents/GitHub/ukov_admin/src/components/Carousel/InternshipCarousel.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/index.js",[],["99","100"],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/App.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/admin.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/fbase.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/login.js",["101","102"],"import React, { useEffect, useState } from 'react';\nimport { auth, firebaseInstance } from './fbase';\nimport './css/login.css'\n\n\n\nfunction Login(){\n    const onClick = async() => {\n        let provider = new firebaseInstance.auth.GoogleAuthProvider()\n        await auth.signInWithPopup(provider)\n    }\n        return (\n        <div className='logInBody'>\n        <div className='firstIntroduce'>\n            안녕하세요! 저는 22기 단장으로 활동했던 최봉수 입니다!<br/>\n            제가 홈페이지를 만들긴 했는데 이런 저런 정보 수정이 필요할 것 같아서 <br/>\n            이렇게 따로 어드민 페이지를 만들었습니다.<br/>\n            자세한 사항은 로그인 하시면 확인할 수 있으니 로그인해주세요 :)<br/><br/>\n\n            <b>ukov계정이 아니면 로그인 안됩니다! 계정 확인 부탁드립니다 :)</b><br/><br/>\n\n\n        </div>\n\n            <button onClick={onClick} name='google'>UKOV계정으로 로그인하기</button>\n        </div>\n    )\n};\nexport default Login;","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/partner.js",["103"],"import React, { useEffect, useState } from 'react';\nimport { dbService, firebaseInstance, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction Partner() {\n    // partner 정보 받아오기\n\n        const [partner, setpartner] = useState();\n        const getpartner = async () =>{\n            const dbpartner = await dbService.collection(\"partner\").get();\n            dbpartner.forEach((document) => {\n                const newpartner = {\n                    ...document.data(),\n                    id: document.id\n                };\n                setpartner(newpartner)\n            });\n        };\n        useEffect(()=>{\n            getpartner();  \n        }, [])\n        let [Link, setNewLink] = useState('')\n\n        const newLinkChange = (event) => {\n            const {target :{value}} = event;\n            setNewLink(value)\n        }\n\n        const [newFile, setNewFile] = useState()\n        const newfileChange = (event) => {\n            const {\n                target: {files}\n            } = event;\n            const theFile = files[0];\n            const reader = new FileReader();\n            reader.onloadend = (finishedEvent) => {\n                setNewFile(finishedEvent.currentTarget.result)\n            };\n            reader.readAsDataURL(theFile);\n            \n        };\n\n        const newSubmit = async (event) => {\n            event.preventDefault();\n    \n            // 파일을 스토리지에 업로드하기\n            const fireRef = storageService.ref().child(`partner/${uuidv4()}`)\n            const response = await fireRef.putString(newFile, \"data_url\")\n            const partnerURL = await response.ref.getDownloadURL();\n    \n    \n            // 스트링 정보를 넣어주기\n            await dbService.collection(\"partner\").add({\n                partnerLink: Link,\n                partnerURL: partnerURL,\n                createdAt: Date.now(),\n            })\n    \n            // 새로 업로드 후 input 태그 초기화\n            setNewLink('')\n            alert('홈페이지에서 확인해보세요 :)')\n        }\n    \n\n\n\n\n\n    return (\n        <>\n        <div className='title'>홈탭의 UKOV후기와 프로그램탭의 스타트업 인턴십 <b>두곳 모두</b> 수정되는 곳입니다!</div>\n        <div className='subtitle'> 추가하기 </div>\n\n            <form onSubmit={newSubmit}>\n            이미지 파일을 추가하세요<input type='file' onChange={newfileChange}/>\n            {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                <input  type='text' value={Link} onChange={newLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                <input  type='submit' placeholder='추가하기' className='button' value=''/>\n            </form>\n\n        {partner.map((partner)=>(\n            <>\n              <div className='listBox' key={partner.id}>\n                  <a href={partner.partnerLink}>\n                      <div className='smallBox'>\n                        <img src={partner.partnerURL} alt='partner'/>\n                      </div>\n                  </a>\n                <button onClick={()=>{\n                    // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                    const del = window.confirm(\"지우시겠습니까?\");\n                        if (del) {\n                    dbService.doc(`partner/${partner.id}`).delete()\n                    storageService.refFromURL(partner.partnerURL).delete()\n                    alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                }\n                }}>삭제하기</button>\n                </div>\n            </>\n        ))}        \n    </>\n)  \n\n}\n\nexport default Partner;","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/info.js",["104"],"import React, { useEffect, useState } from 'react';\nimport { dbService, firebaseInstance, storageService } from '../fbase';\n\n// 기존 데이터 가져오기\nfunction Info() {\n    const [info, setInfo] = useState();\n    const getInfo = async () =>{\n        const dbinfo = await dbService.collection(\"testinfo\").get();\n        dbinfo.forEach((document) => {\n            const newInfo = {\n                ...document.data(),\n                id: document.id\n            };\n            setInfo(newInfo)\n        });\n    };\n    useEffect(()=>{\n        getInfo();  \n    }, [])\n\n    // 변경될 값들 state설정하기\n    let [Link, setNewLink] = useState(info?.Link)\n    let [Finish, setNewFinish] = useState(info?.Finish)\n    let [Alumni, setNewAlumni] = useState(info?.Alumni)\n    let [resumePass, setNewresumePass] = useState(info?.resumePass)\n    let [start_date, setNewstart_date] = useState(info?.start_date)\n    let [project, setNewproject] = useState(info?.project)\n    let [end_date, setNewend_date] = useState(info?.end_date)\n    let [meeting1, setNewmeeting1] = useState(info?.meeting1)\n    let [meeting2, setNewmeeting2] = useState(info?.meeting2)\n    let [th, setNewth] = useState(info?.th)\n    let [year, setNewyear] = useState(info?.year)\n\n    // input 입력 값 전달받기\n    const newthChange = (event) => {\n        const {target :{value}} = event;\n        setNewth(value)\n    }\n    const newyearChange = (event) => {\n        const {target :{value}} = event;\n        setNewyear(value)\n    }\n    const newend_dateChange = (event) => {\n        const {target :{value}} = event;\n        setNewend_date(value)\n    }\n    const newmeeting1Change = (event) => {\n        const {target :{value}} = event;\n        setNewmeeting1(value)\n    }\n    const newmeeting2Change = (event) => {\n        const {target :{value}} = event;\n        setNewmeeting2(value)\n    }\n    const newprojectChange = (event) => {\n        const {target :{value}} = event;\n        setNewproject(value)\n    }\n    const newresumePassChange = (event) => {\n        const {target :{value}} = event;\n        setNewresumePass(value)\n    }\n    const newstart_dateChange = (event) => {\n        const {target :{value}} = event;\n        setNewstart_date(value)\n    }\n    const newLinkChange = (event) => {\n        const {target :{value}} = event;\n        setNewLink(value)\n    }\n    const newFinishChange = (event) => {\n        const {target :{value}} = event;\n        setNewFinish(value)\n    }\n    const newAlumniChange = (event) => {\n        const {target :{value}} = event;\n        setNewAlumni(value)\n    }\n\n    // input으로 file 들어오는 것 storage에 들어가고, url 가져오기\n    const [newFile, setNewFile] = useState()\n    const newfileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        reader.readAsDataURL(theFile);\n        \n    };\n    \n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일 이름 및 위치, url받아오기\n        const fireRef = storageService.ref().child(`이름_Ukov_${info?.th}기_지원서.docx`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        const file = await response.ref.getDownloadURL();\n\n        //update가 오류가 있 삭제 후 다시 만들기 / 가끔 add가 2번 들어가는 현상이 발생하여 delete를 3번 호출 / 아예 info자체가 사라지는 현상이 발생하여 if문 삽입\n        if (info?.id === '') {\n        } else {\n            await dbService.collection('testinfo').doc(info?.id).delete()\n            await dbService.collection('testinfo').doc(info?.id).delete()\n            await dbService.collection('testinfo').doc(info?.id).delete()\n\n        } \n        \n        await dbService.collection('testinfo').add({\n            // finish: firebaseInstance.firestore.Timestamp.fromDate(Finish),\n            Link,\n            alumni: Alumni,\n            end_date,\n            start_date,\n            file: file,\n            meeting1,\n            meeting2,\n            project,\n            resumePass,\n            th,\n            year,\n        });\n\n        // 값을 push하고 input초기화\n        setNewFile('')\n        setNewFinish('')\n        setNewLink('')\n        setNewend_date('')\n        setNewmeeting1('')\n        setNewmeeting2('')\n        setNewproject('')\n        setNewresumePass('')\n        setNewstart_date('')\n        setNewth('')\n        setNewyear('')\n        setNewAlumni('')\n        alert('홈페이지를 확인해보세요 :)')\n    }\n\n\n    \n    return (\n        <>\n        <div className='title'>페이지에 들어갈 전반적인 정보들을 수정합니다.<br/><br/>\n            흐릿하게 쓰여져 있는 것들은 현재 홈페이지에 쓰여있는 내용들입니다.<br/>\n            <b>정보들을 모두 입력</b>하고(파일도 추가하고) 제출해주셔야 정상 제출 됩니다!<br/>\n            참고하셔서 수정하시고 수정하시면 홈페이지에 바로 수정됩니당~~~</div><br/><br/>\n        <form onSubmit={onSubmit}>\n            <input value={Link} onChange={newLinkChange} placeholder={info?.Link}/>구글 독스, typeform등 서류 받을 링크를 넣어주세요<br/><br/>\n            지원서(docx...)를 넣어주세요<input type='file' onChange={newfileChange} /><br/><br/>\n            <input value={th} onChange={newthChange} placeholder={info?.th} type='number' />이제 몇기를 뽑는 것일까요?<br/>\n            <input value={year} onChange={newyearChange} placeholder={info?.year} type='number'/>유코브는 몇년 됐나요?<br/>\n            <input value={Alumni} onChange={newAlumniChange} placeholder={info?.alumni} type='number'/>지금까지 몇명의 ukov알럼나이가 있나요?<br/>\n\n            <input value={project} onChange={newprojectChange} placeholder={info?.project} type='number'/>유코브는 지금까지 몇 개의 프로젝트를 했나요?<br/><br/>\n\n            <p>홈페이지에 그대로 나오니 원하는 대로 적어주시면 됩니다 :)</p>\n            <input value={start_date} onChange={newstart_dateChange} placeholder={info?.start_date}/>언제부터 모집이 시작되나요?<br/>\n            <input value={end_date} onChange={newend_dateChange} placeholder={info?.end_date}/>언제 모집이 마감되나요?<br/>\n            <input value={resumePass} onChange={newresumePassChange} placeholder={info?.resumePass}/>서류 합격 발표일은 언제일까요?<br/>\n            <input value={meeting1} onChange={newmeeting1Change} placeholder={info?.meeting1}/>첫 번째 면접 날<br/>\n            <input value={meeting2} onChange={newmeeting2Change} placeholder={info?.meeting2}/>두 번째 면접 날<br/><br/>\n\n            <p>이건 날짜 데이터 따로 받습니다! 날짜 넣으시면 시간에 맞게 리크루팅 탭에 지원하기 버튼이 생기고 사라집니다</p>\n\n            <input value={Finish} onChange={newFinishChange} type='date'/>서류 마감날짜를 넣어주세요<br/>\n            <input type='submit' className='button' />\n        </form>\n        </>\n    )\n}\n\nexport default Info;","/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/FAQ.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/internship.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/recruit.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/project.js",[],"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/networking.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"113","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"114","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":37},{"ruleId":"109","severity":1,"message":"114","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":37},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'firebaseInstance' is defined but never used.","no-global-assign","no-unsafe-negation"]
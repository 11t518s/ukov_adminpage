{"ast":null,"code":"var _jsxFileName = \"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/partner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { dbService, firebaseInstance, storageService } from '../fbase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Partner() {\n  _s();\n\n  // partner 정보 받아오기\n  const [partner, setpartner] = useState();\n\n  const getpartner = async () => {\n    const dbpartner = await dbService.collection(\"partner\").get();\n    dbpartner.forEach(document => {\n      const newpartner = { ...document.data(),\n        id: document.id\n      };\n      setpartner(newpartner);\n    });\n  };\n\n  useEffect(() => {\n    getpartner();\n  }, []);\n  let [Link, setNewLink] = useState('');\n  let [URL, setNewURL] = useState('');\n\n  const newLinkChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewLink(value);\n  };\n\n  const newURLChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewURL(value);\n  };\n\n  const [newFile, setNewFile] = useState();\n\n  const newfileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      setNewFile(finishedEvent.currentTarget.result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const newSubmit = async event => {\n    event.preventDefault(); // 파일을 스토리지에 업로드하기\n\n    const fireRef = storageService.ref().child(`partner/${uuidv4()}`);\n    const response = await fireRef.putString(newFile, \"data_url\");\n    const internshipURL = await response.ref.getDownloadURL(); // 스트링 정보를 넣어주기\n\n    await dbService.collection(\"partner\").add({\n      partnerLink: Link,\n      partnerURL: URL,\n      createdAt: Date.now()\n    }); // 새로 업로드 후 input 태그 초기화\n\n    setNewLink('');\n    setNewURL('');\n    alert('홈페이지에서 확인해보세요 :)');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Partner\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Partner, \"FjDqUQVYnA/BPvW0+fdEsqOnQbs=\");\n\n_c = Partner;\nexport default Partner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Partner\");","map":{"version":3,"sources":["/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/partner.js"],"names":["React","useEffect","useState","dbService","firebaseInstance","storageService","Partner","partner","setpartner","getpartner","dbpartner","collection","get","forEach","document","newpartner","data","id","Link","setNewLink","URL","setNewURL","newLinkChange","event","target","value","newURLChange","newFile","setNewFile","newfileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","newSubmit","preventDefault","fireRef","ref","child","uuidv4","response","putString","internshipURL","getDownloadURL","add","partnerLink","partnerURL","createdAt","Date","now","alert"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { dbService, firebaseInstance, storageService } from '../fbase';\n\nfunction Partner() {\n    // partner 정보 받아오기\n\n        const [partner, setpartner] = useState();\n        const getpartner = async () =>{\n            const dbpartner = await dbService.collection(\"partner\").get();\n            dbpartner.forEach((document) => {\n                const newpartner = {\n                    ...document.data(),\n                    id: document.id\n                };\n                setpartner(newpartner)\n            });\n        };\n        useEffect(()=>{\n            getpartner();  \n        }, [])\n    \n        let [Link, setNewLink] = useState('')\n        let [URL, setNewURL] = useState('')\n\n        const newLinkChange = (event) => {\n            const {target :{value}} = event;\n            setNewLink(value)\n        }\n        const newURLChange = (event) => {\n            const {target :{value}} = event;\n            setNewURL(value)\n        }\n\n        const [newFile, setNewFile] = useState()\n        const newfileChange = (event) => {\n            const {\n                target: {files}\n            } = event;\n            const theFile = files[0];\n            const reader = new FileReader();\n            reader.onloadend = (finishedEvent) => {\n                setNewFile(finishedEvent.currentTarget.result)\n            };\n            reader.readAsDataURL(theFile);\n            \n        };\n\n        const newSubmit = async (event) => {\n            event.preventDefault();\n    \n            // 파일을 스토리지에 업로드하기\n            const fireRef = storageService.ref().child(`partner/${uuidv4()}`)\n            const response = await fireRef.putString(newFile, \"data_url\")\n            const internshipURL = await response.ref.getDownloadURL();\n    \n    \n            // 스트링 정보를 넣어주기\n            await dbService.collection(\"partner\").add({\n                partnerLink: Link,\n                partnerURL: URL,\n                createdAt: Date.now(),\n            })\n    \n            // 새로 업로드 후 input 태그 초기화\n            setNewLink('')\n            setNewURL('')\n            alert('홈페이지에서 확인해보세요 :)')\n        }\n    \n\n\n\n\n\n    return (\n        <div>Partner</div>\n    )\n\n}\n\nexport default Partner;"]},"metadata":{},"sourceType":"module"}
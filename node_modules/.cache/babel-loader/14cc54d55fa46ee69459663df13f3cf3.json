{"ast":null,"code":"import _regeneratorRuntime from\"/Users/bongsu/Documents/GitHub/ukov_adminpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Users/bongsu/Documents/GitHub/ukov_adminpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/bongsu/Documents/GitHub/ukov_adminpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/bongsu/Documents/GitHub/ukov_adminpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/bongsu/Documents/GitHub/ukov_adminpage/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{dbService,storageService}from'../fbase';import{v4 as uuidv4}from\"uuid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Networking(){// 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),networking=_useState2[0],setnetworking=_useState2[1];var getnetworking=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var dbnetworking;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return dbService.collection(\"networking\").get();case 2:dbnetworking=_context.sent;dbnetworking.forEach(function(document){var newnetworking=_objectSpread(_objectSpread({},document.data()),{},{id:document.id});setnetworking(function(prev){return[newnetworking].concat(_toConsumableArray(prev));});});case 4:case\"end\":return _context.stop();}}},_callee);}));return function getnetworking(){return _ref.apply(this,arguments);};}();useEffect(function(){getnetworking();},[]);// 새로 추가할 스트링 state 선언\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),newnetworkingLink=_useState4[0],setNewnetworkingLink=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),newTitle=_useState6[0],setNewTitle=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),newSubtitle=_useState8[0],setNewSubtitle=_useState8[1];// input태그에 입력 시 각 state에 정보 업로드\nvar onLinkChange=function onLinkChange(event){var value=event.target.value;setNewnetworkingLink(value);};var onTitleChange=function onTitleChange(event){var value=event.target.value;setNewTitle(value);};var onSubtitleChange=function onSubtitleChange(event){var value=event.target.value;setNewSubtitle(value);};// submit 함수 \nvar newSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var fireRef,response,networkingURL;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:event.preventDefault();// 파일을 스토리지에 업로드하기\nfireRef=storageService.ref().child(\"networking/\".concat(uuidv4()));_context2.next=4;return fireRef.putString(newFile,\"data_url\");case 4:response=_context2.sent;_context2.next=7;return response.ref.getDownloadURL();case 7:networkingURL=_context2.sent;_context2.next=10;return dbService.collection(\"networking\").add({title:newTitle,subtitle:newSubtitle,networkingLink:newnetworkingLink,networkingURL:networkingURL,createdAt:Date.now()});case 10:// 새로 업로드 후 input 태그 초기화\nsetNewnetworkingLink('');setNewTitle('');setNewSubtitle('');setNewFile();alert('새로고침 하신 후 확인해보세요 :)');case 15:case\"end\":return _context2.stop();}}},_callee2);}));return function newSubmit(_x){return _ref2.apply(this,arguments);};}();// 파일을 데이터 url로 받아서 화면상에 보여주기\nvar _useState9=useState(),_useState10=_slicedToArray(_useState9,2),newFile=_useState10[0],setNewFile=_useState10[1];var fileChange=function fileChange(event){var files=event.target.files;var theFile=files[0];var reader=new FileReader();reader.onloadend=function(finishedEvent){setNewFile(finishedEvent.currentTarget.result);};reader.readAsDataURL(theFile);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"\\uD504\\uB85C\\uADF8\\uB7A8\\uD0ED\\uC758 \\uB124\\uD2B8\\uC6CC\\uD0B9\\uC774 \\uC218\\uC815\\uB418\\uB294 \\uACF3\\uC785\\uB2C8\\uB2E4!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtitle\",children:\" \\uCD94\\uAC00\\uD558\\uAE30 \"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:newSubmit,children:[\"\\uC774\\uBBF8\\uC9C0 \\uD30C\\uC77C\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694\",/*#__PURE__*/_jsx(\"input\",{type:\"file\",onChange:fileChange}),newFile&&/*#__PURE__*/_jsx(\"img\",{src:newFile,alt:\"file\",width:\"300px\",height:\"300px\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newnetworkingLink,onChange:onLinkChange,placeholder:\"\\uB9C1\\uD06C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTitle,onChange:onTitleChange,placeholder:\"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newSubtitle,onChange:onSubtitleChange,placeholder:\"\\uBD80\\uC81C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"\\uCD94\\uAC00\\uD558\\uAE30\",className:\"button\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"subtitle\",children:[\"\\uC0AD\\uC81C\\uD558\\uAE30\",networking.id]}),networking.map(function(networking){return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"listBox\",children:[/*#__PURE__*/_jsxs(\"a\",{href:networking.networkingLink,children:[/*#__PURE__*/_jsx(\"div\",{className:\"smallBox\",children:/*#__PURE__*/_jsx(\"img\",{src:networking.networkingURL,alt:\"networking\"})}),/*#__PURE__*/_jsx(\"h1\",{children:networking.title}),/*#__PURE__*/_jsx(\"h2\",{children:networking.subtitle})]}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){// 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\nvar del=window.confirm(\"지우시겠습니까?\");if(del){dbService.doc(\"networking/\".concat(networking.id)).delete();storageService.refFromURL(networking.networkingURL).delete();alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!');}},children:\"\\uC0AD\\uC81C\\uD558\\uAE30\"})]},networking.id)});})]});}export default Networking;","map":{"version":3,"sources":["/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/networking.js"],"names":["React","useEffect","useState","dbService","storageService","v4","uuidv4","Networking","networking","setnetworking","getnetworking","collection","get","dbnetworking","forEach","document","newnetworking","data","id","prev","newnetworkingLink","setNewnetworkingLink","newTitle","setNewTitle","newSubtitle","setNewSubtitle","onLinkChange","event","value","target","onTitleChange","onSubtitleChange","newSubmit","preventDefault","fireRef","ref","child","putString","newFile","response","getDownloadURL","networkingURL","add","title","subtitle","networkingLink","createdAt","Date","now","setNewFile","alert","fileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","map","del","window","confirm","doc","delete","refFromURL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Networking() {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [networking, setnetworking] = useState([])\n    const getnetworking = async () =>{\n        const dbnetworking = await dbService.collection(\"networking\").get();\n        dbnetworking.forEach((document) => {\n            const newnetworking = {\n                ...document.data(),\n                id: document.id\n            };\n            setnetworking((prev) => [newnetworking, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getnetworking();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newnetworkingLink, setNewnetworkingLink] = useState();\n    const [newTitle, setNewTitle] = useState();\n    const [newSubtitle, setNewSubtitle] = useState();\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewnetworkingLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        const fireRef = storageService.ref().child(`networking/${uuidv4()}`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        const networkingURL = await response.ref.getDownloadURL();\n\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"networking\").add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            networkingLink: newnetworkingLink,\n            networkingURL,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewnetworkingLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile()\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    const [newFile, setNewFile] = useState()\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    return (\n        <>\n            <div className='title'>프로그램탭의 네트워킹이 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit}>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                    <input  type='text' value={newnetworkingLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button'/>\n                </form>\n            <div className='subtitle'>삭제하기{networking.id}</div>\n\n\n            {networking.map((networking)=>(\n                <>\n                  <div className='listBox' key={networking.id}>\n                      <a href={networking.networkingLink}>\n                          <div className='smallBox'>\n                            <img src={networking.networkingURL} alt='networking'/>\n                          </div>\n                          <h1>{networking.title}</h1>\n                          <h2>{networking.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`networking/${networking.id}`).delete()\n                        storageService.refFromURL(networking.networkingURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Networking;"]},"metadata":{},"sourceType":"module"}
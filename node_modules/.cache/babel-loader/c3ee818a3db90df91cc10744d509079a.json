{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { dbService } from '../fbase.js';\n\nfunction Info(props) {\n  _s();\n\n  const [info, setInfo] = useState([]);\n\n  const getInfo = async () => {\n    const dbinfo = await dbService.collection(\"UKOV\").get();\n    dbinfo.forEach(document => {\n      const newInfo = { ...document.data(),\n        id: document.id\n      };\n      setInfo([newInfo]);\n    });\n  };\n\n  useEffect(() => {\n    getInfo();\n  }, []);\n  const test = [];\n  console.log(info);\n  info.map(info => test);\n}\n\n_s(Info, \"+1zfbqR6+rdUDHAscg9cjUhEYtk=\");\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["/Users/bongsu/Documents/GitHub/ukov_admin/src/components/info.js"],"names":["React","useEffect","useState","dbService","Info","props","info","setInfo","getInfo","dbinfo","collection","get","forEach","document","newInfo","data","id","test","console","log","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,aAAxB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,OAAO,GAAG,YAAW;AACvB,UAAMC,MAAM,GAAG,MAAMN,SAAS,CAACO,UAAV,CAAqB,MAArB,EAA6BC,GAA7B,EAArB;AACAF,IAAAA,MAAM,CAACG,OAAP,CAAgBC,QAAD,IAAc;AACzB,YAAMC,OAAO,GAAG,EACZ,GAAGD,QAAQ,CAACE,IAAT,EADS;AAEZC,QAAAA,EAAE,EAAEH,QAAQ,CAACG;AAFD,OAAhB;AAIAT,MAAAA,OAAO,CAAC,CAACO,OAAD,CAAD,CAAP;AACH,KAND;AAOC,GATL;;AAUAb,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAMS,IAAI,GAAG,EAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAA,EAAAA,IAAI,CAACc,GAAL,CAAUd,IAAD,IAAUW,IAAnB;AAGH;;GAtBQb,I;;KAAAA,I;AAwBT,eAAeA,IAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {dbService} from '../fbase.js'\n\nfunction Info(props){\n\n    const [info, setInfo] = useState([]);\n\n    const getInfo = async () =>{\n        const dbinfo = await dbService.collection(\"UKOV\").get();\n        dbinfo.forEach((document) => {\n            const newInfo = {\n                ...document.data(),\n                id: document.id\n            };\n            setInfo([newInfo])\n        });\n        };        \n    useEffect(()=>{\n        getInfo();\n    }, [])\n    const test = [];\n    console.log(info);\n    info.map((info) =>(test));\n\n\n}\n\nexport default Info;"]},"metadata":{},"sourceType":"module"}
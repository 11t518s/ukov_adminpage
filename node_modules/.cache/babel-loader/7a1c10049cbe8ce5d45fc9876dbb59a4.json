{"ast":null,"code":"var _jsxFileName = \"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/FAQ.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport '../css/FAQ.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FAQ({\n  userObj\n}) {\n  _s();\n\n  // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n  const [FAQ, setFAQ] = useState([]);\n\n  const getFAQ = async () => {\n    const dbFAQ = await dbService.collection(\"FAQ\").get();\n    dbFAQ.forEach(document => {\n      const newFAQ = { ...document.data(),\n        id: document.id\n      };\n      setFAQ(prev => [newFAQ, ...prev]);\n    });\n  };\n\n  useEffect(() => {\n    getFAQ();\n  }, []); // 새로 추가할 스트링 state 선언\n\n  const [newQ, setNewQ] = useState();\n  const [newA, setNewA] = useState(); // input태그에 입력 시 각 state에 정보 업로드\n\n  const onLinkChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewQ(value);\n  };\n\n  const onAChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewA(value);\n  }; // submit 함수 \n\n\n  const newSubmit = async event => {\n    event.preventDefault(); // 스트링 정보를 넣어주기\n\n    await dbService.collection(\"FAQ\").add({\n      A: newA,\n      Q: newQ,\n      createdAt: Date.now()\n    }); // 새로 업로드 후 input 태그 초기화\n\n    setNewQ('');\n    setNewA('');\n    alert('홈페이지에서 확인해보세요 :)');\n  }; // 파일을 데이터 url로 받아서 화면상에 보여주기\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"\\uB9AC\\uD06C\\uB8E8\\uD2B8 \\uD0ED\\uC758 FAQ\\uAC00 \\uC218\\uC815\\uB418\\uB294 \\uACF3\\uC785\\uB2C8\\uB2E4!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"A\",\n      children: \" \\uCD94\\uAC00\\uD558\\uAE30 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: newSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newQ,\n        onChange: onLinkChange,\n        placeholder: \"Q\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 102\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newA,\n        onChange: onAChange,\n        placeholder: \"A\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 100\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        placeholder: \"\\uCD94\\uAC00\\uD558\\uAE30\",\n        className: \"button\",\n        value: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"A\",\n      children: [\"\\uC0AD\\uC81C\\uD558\\uAE30\", FAQ.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), FAQ.map(FAQ => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: FAQ.Q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: FAQ.A\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n            const del = window.confirm(\"지우시겠습니까?\");\n\n            if (del) {\n              dbService.doc(`FAQ/${FAQ.id}`).delete();\n              storageService.refFromURL(FAQ.FAQURL).delete();\n              alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!');\n            }\n          },\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, FAQ.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this)\n    }, void 0, false))]\n  }, void 0, true);\n}\n\n_s(FAQ, \"rVViVG9zbco653hW/dKxCTK/L4Y=\");\n\n_c = FAQ;\nexport default FAQ;\n\nvar _c;\n\n$RefreshReg$(_c, \"FAQ\");","map":{"version":3,"sources":["/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/FAQ.js"],"names":["React","useEffect","useState","dbService","storageService","FAQ","userObj","setFAQ","getFAQ","dbFAQ","collection","get","forEach","document","newFAQ","data","id","prev","newQ","setNewQ","newA","setNewA","onLinkChange","event","target","value","onAChange","newSubmit","preventDefault","add","A","Q","createdAt","Date","now","alert","map","del","window","confirm","doc","delete","refFromURL","FAQURL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport '../css/FAQ.css'\n\n\nfunction FAQ({userObj}) {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [FAQ, setFAQ] = useState([])\n    const getFAQ = async () =>{\n        const dbFAQ = await dbService.collection(\"FAQ\").get();\n        dbFAQ.forEach((document) => {\n            const newFAQ = {\n                ...document.data(),\n                id: document.id\n            };\n            setFAQ((prev) => [newFAQ, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getFAQ();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newQ, setNewQ] = useState();\n    const [newA, setNewA] = useState();\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewQ(value)\n    }\n    const onAChange = (event) => {\n        const {target:{value}} = event;\n        setNewA(value)\n    }\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault()\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"FAQ\").add({\n            A: newA,\n            Q: newQ,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewQ('')\n        setNewA('')\n        alert('홈페이지에서 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    return (\n        <>\n            <div className='title'>리크루트 탭의 FAQ가 수정되는 곳입니다!</div>\n            <div className='A'> 추가하기 </div>\n\n                <form onSubmit={newSubmit}>\n                    <input  type='text' value={newQ} onChange={onLinkChange} placeholder='Q를 입력하세요'/><br/>\n                    <input  type='text' value={newA} onChange={onAChange} placeholder='A를 입력해주세요'/><br/>\n                    <input  type='submit' placeholder='추가하기' className='button' value=''/>\n                </form>\n            <div className='A'>삭제하기{FAQ.id}</div>\n\n            {FAQ.map((FAQ)=>(\n                <>\n                  <div className='listBox' key={FAQ.id}>\n                          <h6>{FAQ.Q}</h6>\n                          <h2>{FAQ.A}</h2>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`FAQ/${FAQ.id}`).delete()\n                        storageService.refFromURL(FAQ.FAQURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default FAQ;"]},"metadata":{},"sourceType":"module"}
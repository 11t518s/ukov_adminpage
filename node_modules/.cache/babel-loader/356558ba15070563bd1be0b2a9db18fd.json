{"ast":null,"code":"var _jsxFileName = \"/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/project.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Project() {\n  _s();\n\n  // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n  const [project, setproject] = useState([]);\n\n  const getproject = async () => {\n    const dbproject = await dbService.collection(\"project\").get();\n    dbproject.forEach(document => {\n      const newproject = { ...document.data(),\n        id: document.id\n      };\n      setproject(prev => [newproject, ...prev]);\n    });\n  };\n\n  useEffect(() => {\n    getproject();\n  }, []); // 새로 추가할 스트링 state 선언\n\n  const [newprojectLink, setNewprojectLink] = useState();\n  const [newTitle, setNewTitle] = useState();\n  const [newSubtitle, setNewSubtitle] = useState(); // input태그에 입력 시 각 state에 정보 업로드\n\n  const onLinkChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewprojectLink(value);\n  };\n\n  const onTitleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewTitle(value);\n  };\n\n  const onSubtitleChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNewSubtitle(value);\n  }; // submit 함수 \n\n\n  const newSubmit = async event => {\n    event.preventDefault(); // 파일을 스토리지에 업로드하기\n\n    const fireRef = storageService.ref().child(`project/${uuidv4()}`);\n    const response = await fireRef.putString(newFile, \"data_url\");\n    const projectURL = await response.ref.getDownloadURL(); // 스트링 정보를 넣어주기\n\n    await dbService.collection(\"project\").orderBy('createdAt').add({\n      title: newTitle,\n      subtitle: newSubtitle,\n      projectLink: newprojectLink,\n      projectURL,\n      createdAt: Date.now()\n    }); // 새로 업로드 후 input 태그 초기화\n\n    setNewprojectLink('');\n    setNewTitle('');\n    setNewSubtitle('');\n    setNewFile();\n    alert('새로고침 하신 후 확인해보세요 :)');\n  }; // 파일을 데이터 url로 받아서 화면상에 보여주기\n\n\n  const [newFile, setNewFile] = useState();\n\n  const fileChange = event => {\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      setNewFile(finishedEvent.currentTarget.result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"\\uD504\\uB85C\\uADF8\\uB7A8\\uD0ED\\uC758 \\uD504\\uB85C\\uC81D\\uD2B8\\uAC00 \\uC218\\uC815\\uB418\\uB294 \\uACF3\\uC785\\uB2C8\\uB2E4!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle\",\n      children: \" \\uCD94\\uAC00\\uD558\\uAE30 \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: newSubmit,\n      children: [\"\\uC774\\uBBF8\\uC9C0 \\uD30C\\uC77C\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: fileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 30\n      }, this), newFile && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: newFile,\n        alt: \"file\",\n        width: \"300px\",\n        height: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newprojectLink,\n        onChange: onLinkChange,\n        placeholder: \"\\uB9C1\\uD06C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 116\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newTitle,\n        onChange: onTitleChange,\n        placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 109\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newSubtitle,\n        onChange: onSubtitleChange,\n        placeholder: \"\\uBD80\\uC81C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 115\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"\\uCD94\\uAC00\\uD558\\uAE30\",\n        className: \"button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle\",\n      children: [\"\\uC0AD\\uC81C\\uD558\\uAE30\", project.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), project.map(project => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: project.projectLink,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"smallBox\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: project.projectURL,\n              alt: \"project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: project.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n            const del = window.confirm(\"지우시겠습니까?\");\n\n            if (del) {\n              dbService.doc(`project/${project.id}`).delete();\n              storageService.refFromURL(project.projectURL).delete();\n              alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!');\n            }\n          },\n          children: \"\\uC0AD\\uC81C\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }, this)\n    }, void 0, false))]\n  }, void 0, true);\n}\n\n_s(Project, \"7utF86h4F6VMZViDCn3tiorRHf8=\");\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["/Users/bongsu/Documents/GitHub/ukov_adminpage/src/components/project.js"],"names":["React","useEffect","useState","dbService","storageService","v4","uuidv4","Project","project","setproject","getproject","dbproject","collection","get","forEach","document","newproject","data","id","prev","newprojectLink","setNewprojectLink","newTitle","setNewTitle","newSubtitle","setNewSubtitle","onLinkChange","event","target","value","onTitleChange","onSubtitleChange","newSubmit","preventDefault","fireRef","ref","child","response","putString","newFile","projectURL","getDownloadURL","orderBy","add","title","subtitle","projectLink","createdAt","Date","now","setNewFile","alert","fileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","readAsDataURL","map","del","window","confirm","doc","delete","refFromURL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { dbService, storageService } from '../fbase';\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nfunction Project() {\n\n    // 삭제할 때 어떤 것을 삭제할 지 확인하기 위해 기존 데이터를 불러옴\n    const [project, setproject] = useState([])\n    const getproject = async () =>{\n        const dbproject = await dbService.collection(\"project\").get();\n        dbproject.forEach((document) => {\n            const newproject = {\n                ...document.data(),\n                id: document.id\n            };\n            setproject((prev) => [newproject, ...prev]);\n        });\n    };\n    useEffect(()=>{\n        getproject();\n    }, [])\n\n\n    // 새로 추가할 스트링 state 선언\n    const [newprojectLink, setNewprojectLink] = useState();\n    const [newTitle, setNewTitle] = useState();\n    const [newSubtitle, setNewSubtitle] = useState();\n\n\n    // input태그에 입력 시 각 state에 정보 업로드\n    const onLinkChange = (event) => {\n        const {target:{value}} = event;\n        setNewprojectLink(value)\n    }\n    const onTitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewTitle(value)\n    }\n    const onSubtitleChange = (event) => {\n        const {target:{value}} = event;\n        setNewSubtitle(value)\n    }\n\n\n    // submit 함수 \n    const newSubmit = async (event) => {\n        event.preventDefault();\n\n        // 파일을 스토리지에 업로드하기\n        const fireRef = storageService.ref().child(`project/${uuidv4()}`)\n        const response = await fireRef.putString(newFile, \"data_url\")\n        const projectURL = await response.ref.getDownloadURL();\n\n\n        // 스트링 정보를 넣어주기\n        await dbService.collection(\"project\").orderBy('createdAt').add({\n            title: newTitle,\n            subtitle: newSubtitle,\n            projectLink: newprojectLink,\n            projectURL,\n            createdAt: Date.now(),\n        })\n\n        // 새로 업로드 후 input 태그 초기화\n        setNewprojectLink('')\n        setNewTitle('')\n        setNewSubtitle('')\n        setNewFile()\n        alert('새로고침 하신 후 확인해보세요 :)')\n    }\n\n    \n    // 파일을 데이터 url로 받아서 화면상에 보여주기\n    const [newFile, setNewFile] = useState()\n    const fileChange = (event) => {\n        const {\n            target: {files}\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            setNewFile(finishedEvent.currentTarget.result)\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    return (\n        <>\n            <div className='title'>프로그램탭의 프로젝트가 수정되는 곳입니다!</div>\n            <div className='subtitle'> 추가하기 </div>\n\n                <form onSubmit={newSubmit}>\n                이미지 파일을 추가하세요<input type='file' onChange={fileChange}/>\n                {newFile && <img src={newFile} alt='file' width='300px' height='300px' />}<br/>\n                    <input  type='text' value={newprojectLink} onChange={onLinkChange} placeholder='링크 주소를 입력하세요'/><br/>\n                    <input  type='text' value={newTitle} onChange={onTitleChange} placeholder='제목을 입력해주세요'/><br/>\n                    <input  type='text' value={newSubtitle} onChange={onSubtitleChange} placeholder='부제를 입력해주세요'/><br/>\n                    <input  type='submit' value=\"추가하기\" className='button' />\n                </form>\n            <div className='subtitle'>삭제하기{project.id}</div>\n\n\n            {project.map((project)=>(\n                <>\n                  <div className='listBox' key={project.id}>\n                      <a href={project.projectLink}>\n                          <div className='smallBox'>\n                            <img src={project.projectURL} alt='project'/>\n                          </div>\n                          <h1>{project.title}</h1>\n                          <h2>{project.subtitle}</h2>\n                      </a>\n                    <button onClick={()=>{\n                        // 컨펌 후 firesore에서 데이터 삭제, storage에서 데이터 삭제\n                        const del = window.confirm(\"지우시겠습니까?\");\n                            if (del) {\n                        dbService.doc(`project/${project.id}`).delete()\n                        storageService.refFromURL(project.projectURL).delete()\n                        alert('삭제를 완료했습니다. 새로고침 하시면 확인 가능합니다!')\n                    }\n                    }}>삭제하기</button>\n                    </div>\n                </>\n            ))}        \n        </>\n    )\n}\n\nexport default Project;"]},"metadata":{},"sourceType":"module"}